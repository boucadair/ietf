<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-opsawg-discardmodel-04" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="IM for Packet Discard Reporting">An Information Model for Packet Discard Reporting</title>

    <author initials="J." surname="Evans" fullname="John Evans">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>1 Principal Place, Worship Street</street>
          <city>London</city>
          <code>EC2A 2FA</code>
          <country>UK</country>
        </postal>
        <email>jevanamz@amazon.co.uk</email>
      </address>
    </author>
    <author initials="O." surname="Pylypenko" fullname="Oleksandr Pylypenko">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>410 Terry Ave N</street>
          <city>Seattle</city>
          <region>WA</region>
          <code>98109</code>
          <country>US</country>
        </postal>
        <email>opyl@amazon.com</email>
      </address>
    </author>
    <author initials="J." surname="Haas" fullname="Jeffrey Haas">
      <organization>Juniper Networks</organization>
      <address>
        <postal>
          <street>1133 Innovation Way</street>
          <city>Sunnyvale</city>
          <region>CA</region>
          <code>94089</code>
          <country>US</country>
        </postal>
        <email>jhaas@juniper.net</email>
      </address>
    </author>
    <author initials="A." surname="Kadosh" fullname="Aviran Kadosh">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>170 West Tasman Dr.</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>US</country>
        </postal>
        <email>akadosh@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair">
      <organization>Orange</organization>
      <address>
        <postal>
          <country>France</country>
        </postal>
        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <date year="2024" month="September" day="19"/>

    <area>Operations and Management Area</area>
    <workgroup>OPSAWG</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 78?>

<t>The primary function of a network is to transport and deliver packets according to service level objectives.  Understanding both where and why packet loss occurs within a network is essential for effective network operation.  Device-reported packet loss provides the most direct signal for network operations to identify the customer impact resulting from unintended packet loss.  This document defines an information model for packet loss reporting, which classifies these signals to enable automated network mitigation of unintended packet loss.</t>



    </abstract>



  </front>

  <middle>


<?line 82?>

<section anchor="introduction"><name>Introduction</name>
<t>To effectively automate network operations, a network operator must be able to detect anomalous packet loss, determine its root cause, and then apply appropriate actions to mitigate any customer-impacting issues.  Some packet loss is normal or intended in IP/MPLS networks, however.  Therefore, precise classification of packet loss signals is crucial both to ensure that anomalous packet loss is easily detected and that the right action or sequence of actions is taken to mitigate the impact, as taking the wrong action can make problems worse.</t>

<t>Existing metrics for reporting packet loss, such as ifInDiscards, ifOutDiscards, ifInErrors, and ifOutErrors defined in <xref target="RFC1213"/>, are insufficient for several reasons. First, they lack precision; for instance, ifInDiscards aggregates all discarded inbound packets without specifying the cause, making it challenging to distinguish between intended and unintended discards. Second, these definitions are ambiguous, leading to inconsistent vendor implementations. For example, in some implementations ifInErrors accounts only for errored packets that are dropped, while in others, it includes all errored packets, whether they are dropped or not. Many implementations support more discard metrics than these, however, they have been inconsistently implemented due to the lack of a standardised classification scheme and clear semantics for packet loss reporting. For example, <xref target="RFC7270"/> provides support for reporting discards per flow in IPFIX using forwardingStatus, however, the defined drop reason codes also lack sufficient clarity (e.g., the "For us" reason code) to support automated root cause analysis and impact mitigation.</t>

<t>Hence, this document presents an information model for packet loss reporting, introducing a classification scheme to facilitate automated mitigation of unintended packet loss. The model addresses the aforementioned issues while remaining protocol-agnostic and implementation-independent, in accordance with <xref target="RFC3444"/>.</t>

<t>The specific implementations of this information model (i.e., protocols and associated data models) are outside the scope of this document.  The scope of this document is limited to reporting packet loss at Layer 3 and frames discarded at Layer 2, although the information model might be extended in future to cover segments dropped at Layer 4. This document considers only the signals that may trigger automated mitigation plans and not how they are defined or executed.</t>

<t><xref target="problem"/> describes the problem to be solved. <xref target="model"/> describes the information model and requirements with a set of examples.  <xref target="mapping"/> provides examples of discard signal-to-cause-to-auto-mitigation action mapping.  <xref target="module"/> presents the information model as an abstract data structure in YANG, in accordance with <xref target="RFC8791"/>.  Appendix A provides an example of where packets may be discarded in a device.  Appendix B details the authors' experience from implementing this model.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>A packet discard is any packet dropped by a device, whether intentionally or unintentionally.</t>

<t>Intended packet loss refers to packet discards that occur due to deliberate network policies or configurations—such as Access Control Lists (ACLs) or policing mechanisms—designed to enforce security or quality of service.</t>

<t>Unintended packet loss refers to packet discards resulting from network errors, misconfigurations, hardware failures, or other anomalies not aligned with the network operator's intended behaviour. These losses negatively impact network performance and service delivery.</t>

<t>For example, intended packet loss occurs when packets are dropped because they match a security policy denying certain traffic types. Unintended packet loss might happen due to a faulty interface causing corrupted packets, leading to their discard.</t>

<t>The meanings of the symbols in the YANG tree diagrams are defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="problem"><name>Problem Statement</name>
<t>At the highest-level, unintended packet loss is the discarding of packets that the network operator otherwise intends to deliver, i.e. which indicates an error state.  There are many possible reasons for unintended packet loss, including: erroring links may corrupt packets in transit; incorrect routing tables may result in packets being dropped because they do not match a valid route; configuration errors may result in a valid packet incorrectly matching an Access Control List (ACL) and being dropped.  While the specific definition of unintended packet loss is network-dependent, for any network there are a small set of potential actions that can be taken to minimise customer impact by automatically mitigating unintended packet loss:</t>

<t><list style="numbers" type="1">
  <t>Take a device, link, or set of devices and/or links out of service.</t>
  <t>Return a device, link, or set of devices and/or links back into service.</t>
  <t>Move traffic to other links or devices.</t>
  <t>Roll back a recent change to a device that might have caused the problem.</t>
  <t>Escalate to a network operator as a last resort.</t>
</list></t>

<t>A precise signal of impact is crucial, as taking the wrong action can be worse than taking no action. For example, taking a congested device out of service can make congestion worse by moving the traffic to other links or devices, which are already congested.</t>

<t>To detect whether device-reported discards indicate a problem and to determine what actions should be taken to mitigate the impact and remediate the cause, depends on four primary features of the packet loss signal:</t>

<dl>
  <dt>FEATURE-LOSS-CAUSE:</dt>
  <dd>
    <t>The cause of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-RATE:</dt>
  <dd>
    <t>The rate and/or degree of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-DURATION:</dt>
  <dd>
    <t>The duration of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-LOCATION:</dt>
  <dd>
    <t>The location of the loss.</t>
  </dd>
</dl>

<t>FEATURE-LOSS-RATE, FEATURE-LOSS-DURATION, and FEATURE-LOSS-LOCATION are already addressed with passive monitoring statistics, for example, obtained with SNMP <xref target="RFC1157"/> / MIB-II <xref target="RFC1213"/> or NETCONF <xref target="RFC6241"/>. FEATURE-LOSS-CAUSE, however, is dependent on the classification scheme used for packet loss reporting. The next section defines a new classification scheme to address this problem.</t>

</section>
<section anchor="model"><name>Information Model</name>

<section anchor="rationale"><name>Design Rationale</name>

<t>This document uses YANG <xref target="RFC6020"/> to represent the information model for three main reasons. First, YANG, along with its data structure extensions <xref target="RFC8791"/>, allows designers to define the model in an abstract way, decoupled from specific implementations. This abstraction ensures consistency and provides flexibility for diverse potential implementations, with the structure and groupings easily adaptable to data models such as those specific to SNMP <xref target="RFC1157"/>, NETCONF <xref target="RFC6241"/>, RESTCONF <xref target="RFC8040"/>, or IPFIX <xref target="RFC7011"/>.  Second, this approach ensures a lossless translation from the information model to a YANG data model, preserving both semantics and structure. Lastly, YANG capitalises on the community’s broad familiarity with its syntax and use, facilitating easier adoption and evolution.</t>

</section>
<section anchor="structure"><name>Structure</name>
<t>The classification scheme is structured as a hierarchical tree that follows the structure: component/direction/type/layer/sub-type/sub-sub-type/.../metric.  The elements of the tree are defined as follows:</t>

<t><list style="symbols">
  <t>Component: Specifies where in the device the discard is accounted. It can be:
  <list style="symbols">
      <t>interface: Discards associated with a specific network interface.</t>
      <t>control-plane: Discards related to the device's control plane.</t>
      <t>flow: Discards associated with a specific traffic flow.</t>
    </list></t>
  <t>Direction:
  <list style="symbols">
      <t>ingress: Discards occurring on incoming packets or frames.</t>
      <t>egress: Discards occurring on outgoing packets or frames.</t>
    </list></t>
  <t>Type:
  <list style="symbols">
      <t>traffic: Counters for successfully received or transmitted packets or frames.</t>
      <t>discards: Counters for packets or frames that were dropped.</t>
    </list></t>
  <t>Layer:
  <list style="symbols">
      <t>l2: Layer 2 discards, such as frames with CRC errors.</t>
      <t>l3: Layer 3 discards, such as IP packets with invalid headers.</t>
    </list></t>
  <t>Sub-Type:
  <list style="symbols">
      <t>For discards:
      <list style="symbols">
          <t>errors: Discards due to errors in processing packets or frames (e.g., checksum errors).</t>
          <t>policy: Discards due to policy enforcement (e.g., ACL drops).</t>
          <t>no-buffer: Discards due to lack of buffer space (e.g., congestion-related drops).</t>
        </list></t>
    </list></t>
</list></t>

<t>Each sub-type may further contain specific reasons for discards, providing more detailed insight into the cause of packet loss.</t>

<figure><artwork><![CDATA[
  structure packet-discard-reporting:
    +-- interface* [name]
       +-- name             string
       +-- ingress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stat* [address-family]
       |  |  |     +-- address-family    identityref
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stat* [address-family]
       |     |     +-- address-family    identityref
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- rx
       |     |  |     +-- frames?          uint32
       |     |  |     +-- crc-error?       uint32
       |     |  |     +-- invalid-mac?     uint32
       |     |  |     +-- invalid-vlan?    uint32
       |     |  |     +-- invalid-frame?   uint32
       |     |  +-- l3
       |     |  |  +-- rx
       |     |  |  |  +-- packets?          uint32
       |     |  |  |  +-- checksum-error?   uint32
       |     |  |  |  +-- mtu-exceeded?     uint32
       |     |  |  |  +-- invalid-packet?   uint32
       |     |  |  |  +-- ttl-expired?      uint32
       |     |  |  +-- no-route?        uint32
       |     |  |  +-- invalid-sid?     uint32
       |     |  |  +-- invalid-label?   uint32
       |     |  +-- hardware
       |     |     +-- packets?        uint32
       |     |     +-- parity-error?   uint32
       |     +-- policy
       |     |  +-- l2
       |     |  |  +-- frames?   uint32
       |     |  |  +-- acl?      uint32
       |     |  +-- l3
       |     |     +-- packets?      uint32
       |     |     +-- acl?          uint32
       |     |     +-- policer
       |     |     |  +-- packets?   uint32
       |     |     |  +-- bytes?     uint32
       |     |     +-- null-route?   uint32
       |     |     +-- rpf?          uint32
       |     |     +-- ddos?         uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- egress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stat* [address-family]
       |  |  |     +-- address-family    identityref
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stat* [address-family]
       |     |     +-- address-family    identityref
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- tx
       |     |  |     +-- frames?   uint32
       |     |  +-- l3
       |     |     +-- tx
       |     |        +-- packets?   uint32
       |     +-- policy
       |     |  +-- l3
       |     |     +-- acl?       uint32
       |     |     +-- policer
       |     |        +-- packets?   uint32
       |     |        +-- bytes?     uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- control-plane
          +-- ingress
             +-- traffic
             |  +-- packets?   uint32
             |  +-- bytes?     uint32
             +-- discards
                +-- packets?   uint32
                +-- bytes?     uint32
                +-- policy
                   +-- packets?   uint32

]]></artwork></figure>

<t>For additional context, Appendix A provides an example of where packets may be discarded in a device.</t>

</section>
<section anchor="requirements"><name>Requirements</name>
<t>Requirements 1-10 relate to packets forwarded by the device, while requirement 11 relates to packets destined for or originating from the device:</t>

<t><list style="numbers" type="1">
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>MUST</bcp14> be reported.</t>
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>SHOULD</bcp14> be attributed to the physical or logical interface of the device where they occur.</t>
  <t>An individual frame <bcp14>MUST</bcp14> only be accounted for by either the Layer 2 traffic class or the Layer 2 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>An individual packet <bcp14>MUST</bcp14> only be accounted for by either the Layer 3 traffic class or the Layer 3 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>A frame accounted for at Layer 2 <bcp14>SHOULD NOT</bcp14> be accounted for at Layer 3 and vice versa.  An implementation <bcp14>MUST</bcp14> indicate which layers a discard is counted against.</t>
  <t>The aggregate Layer 2 and Layer 3 traffic and discard classes <bcp14>SHOULD</bcp14> account for all underlying frames or packets received, transmitted, and discarded across all other classes.</t>
  <t>The aggregate Quality of Service (QoS) traffic and no buffer discard classes <bcp14>MUST</bcp14> account for all underlying packets received, transmitted, and discarded across all other classes.</t>
  <t>In addition to the Layer 2 and Layer 3 aggregate classes, an individual discarded packet <bcp14>MUST</bcp14> only account against a single error, policy, or no-buffer discard subclass.</t>
  <t>When there are multiple reasons for discarding a packet, the ordering of discard class reporting <bcp14>MUST</bcp14> be defined.</t>
  <t>If Diffserv <xref target="RFC2475"/> is not used, no-buffer discards <bcp14>SHOULD</bcp14> be reported as class0.</t>
  <t>Traffic to the device control plane has its own class, however, traffic from the device control plane <bcp14>SHOULD</bcp14> be accounted for in the same way as other egress traffic.</t>
</list></t>

</section>
<section anchor="examples"><name>Examples</name>

<t>Assuming all the requirements are met, a "good" unicast IPv4 packet received would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/traffic/l3/v4/unicast/packets</t>
  <t>interface/ingress/traffic/l3/v4/unicast/bytes</t>
  <t>interface/ingress/traffic/qos/class_0/packets</t>
  <t>interface/ingress/traffic/qos/class_0/bytes</t>
</list></t>

<t>A received unicast IPv6 packet discarded due to Hop Limit expiry would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/discards/l3/v6/unicast/packets</t>
  <t>interface/ingress/discards/l3/v6/unicast/bytes</t>
  <t>interface/ingress/discards/l3/rx/ttl-expired/packets</t>
</list></t>

<t>An IPv4 packet discarded on egress due to no buffers would increment:</t>

<t><list style="symbols">
  <t>interface/egress/discards/l3/v4/unicast/packets</t>
  <t>interface/egress/discards/l3/v4/unicast/bytes</t>
  <t>interface/egress/discards/no-buffer/class_0/packets</t>
  <t>interface/egress/discards/no-buffer/class_0/bytes</t>
</list></t>

</section>
</section>
<section anchor="mapping"><name>Example Signal-Cause-Mitigation Mapping</name>
<t><xref target="ex-table"/> gives an example discard signal-to-cause-to-mitigation action mapping.  Mappings for a specific network will be dependent on the definition of unintended packet loss for that network.</t>

<figure title="Example Signal-Cause-Mitigation Mapping" anchor="ex-table"><artwork><![CDATA[
+-------------------------------------------+---------------------+------------+----------+-------------+-----------------------+
| Discard class                             | Cause               | Discard    | Discard  | Unintended? | Possible actions      |
|                                           |                     | rate       | duration |             |                       |
+-------------------------------------------+---------------------+------------+----------+-------------+-----------------------+
| ingress/discards/errors/l2/rx             | Upstream device     | >Baseline  | O(1min)  | Y           | Take upstream link or |
|                                           | or link error       |            |          |             | device out-of-service |
| ingress/discards/errors/l3/rx/ttl-expired | Tracert             | <=Baseline |          | N           | no action             |
| ingress/discards/errors/l3/rx/ttl-expired | Convergence         | >Baseline  | O(1s)    | Y           | no action             |
| ingress/discards/errors/l3/rx/ttl-expired | Routing loop        | >Baseline  | O(1min)  | Y           | Roll-back change      |
| .*/policy/.*                              | Policy              |            |          | N           | no action             |
| ingress/discards/errors/l3/no-route       | Convergence         | >Baseline  | O(1s)    | Y           | no action             |
| ingress/discards/errors/l3/no-route       | Config error        | >Baseline  | O(1min)  | Y           | Roll-back change      |
| ingress/discards/errors/l3/no-route       | Invalid destination | >Baseline  | O(10min) | N           | Escalate to operator  |
| ingress/discards/errors/local             | Device errors       | >Baseline  | O(1min)  | Y           | Take device           |
|                                           |                     |            |          |             | out-of-service        |
| egress/discards/no-buffer                 | Congestion          | <=Baseline |          | N           | no action             |
| egress/discards/no-buffer                 | Congestion          | >Baseline  | O(1min)  | Y           | Bring capacity back   |
|                                           |                     |            |          |             | into service or move  |
|                                           |                     |            |          |             | traffic               |
+-------------------------------------------+---------------------+------------+----------+-------------+-----------------------+

]]></artwork></figure>

<t>The 'Baseline' in the 'Discard Rate' column is both discard class and network dependent.</t>

</section>
<section anchor="module"><name>YANG Module</name>

<t>The "ietf-packet-discard-reporting" uses the "sx" structure defined in <xref target="RFC8791"/>.</t>

<figure><artwork><![CDATA[
  <CODE BEGINS>
module ietf-packet-discard-reporting {
  yang-version 1.1;
  namespace
    "urn:ietf:params:xml:ns:yang:ietf-packet-discard-reporting";
  prefix plr;

  import ietf-yang-structure-ext {
    prefix sx;
    reference
      "RFC 8791: YANG Data Structure Extensions";
  }

  organization
    "IETF OPSAWG (Operations and Management Area Working Group)";
  contact
    "WG Web:   https://datatracker.ietf.org/wg/opsawg/
     WG List:  mailto:opsawg@ietf.org

     Author:   John Evans
               <mailto:jevanamz@amazon.co.uk>

     Author:   Oleksandr Pylypenko
               <mailto:opyl@amazon.com>

     Author:   Jeffrey Haas
               <mailto:jhaas@juniper.net>

     Author:   Aviran Kadosh
               <mailto:akadosh@cisco.com>

     Author:   Mohamed Boucadair
               <mailto:mohamed.boucadair@orange.com>";
  description
    "This module defines an information model for packet discard
     reporting.

     Copyright (c) 2024 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see the
     RFC itself for full legal notices.";

  revision 2024-06-04 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: An Information Model for Packet Discard Reporting";
  }

  /*
   * Groupings
   */

  grouping basic-packets-64 {
    description
      "Grouping for 64-bit Layer 3 packet counters.";
    leaf packets {
      type uint64;
      description
        "Number of Layer 3 packets.";
    }
  }

  grouping basic-packets-bytes-64 {
    description
      "Grouping for 64-bit packet and byte counters.";
    uses basic-packets-64;
    leaf bytes {
      type uint64;
      description
        "Number of Layer 3 bytes.";
    }
  }

  grouping basic-frames-64 {
    description
      "Grouping for 64-bit frame counters.";
    leaf frames {
      type uint64;
      description
        "Number of Layer 2 frames.";
    }
  }

  grouping basic-frames-bytes-64 {
    description
      "Grouping for 64-bit Layer 2 frame and byte counters.";
    uses basic-frames-64;
    leaf bytes {
      type uint64;
      description
        "Number of Layer 2 bytes.";
    }
  }

  grouping basic-packets-32 {
    description
      "Grouping for 32-bit Layer 3 packet counters.";
    leaf packets {
      type uint32;
      description
        "Number of Layer 3 packets.";
    }
  }

  grouping basic-packets-bytes-32 {
    description
      "Grouping for 32-bit Layer 3 packet and byte counters.";
    uses basic-packets-32;
    leaf bytes {
      type uint32;
      description
        "Number of Layer 3 bytes.";
    }
  }

  grouping basic-frames-32 {
    description
      "Grouping for 32-bit Layer 2 frame counters.";
    leaf frames {
      type uint32;
      description
        "Number of Layer 2 frames.";
    }
  }

  grouping basic-frames-bytes-32 {
    description
      "Grouping for 32-bit Layer 2 frame and byte counters.";
    uses basic-frames-32;
    leaf bytes {
      type uint32;
      description
        "Number of Layer 2 bytes.";
    }
  }

  grouping l2-traffic {
    description
      "Layer 2 traffic counters.";
    uses basic-frames-bytes-64;
  }

  identity address-family {
    description
      "Defines a type for the address family.";
  }

  identity ipv4 {
    base address-family;
    description
      "Identity for an IPv4 address family.";
  }

  identity ipv6 {
    base address-family;
    description
      "Identity for an IPv6 address family.";
  }

  identity all {
    base address-family;
    description
      "Identity for all address families.";
  }

  grouping ip {
    description
      "Layer 3 traffic counters per address family.";
    list address-family-stat {
      key "address-family";
      description
        "Reports per address family traffic counters.";
      leaf address-family {
        type identityref {
          base address-family;
        }
        description
          "Specifies an address family.";
      }
      uses basic-packets-bytes-64;
      container unicast {
        description
          "Reports unicast traffic counters.";
        uses basic-packets-bytes-64;
      }
      container multicast {
        description
          "Reports multicast traffic counters.";
        uses basic-packets-bytes-64;
      }
    }
  }

  grouping l3-traffic {
    description
      "Layer 3 traffic counters.";
      uses ip;
  }

  grouping qos {
    description
      "Quality of Service (QoS) traffic
       counters.";
    list class {
      key "id";
      min-elements 1;
      description
        "QoS class traffic counters.";
      leaf id {
        type string;
        description
          "QoS class identifier.";
      }
      uses basic-packets-bytes-64;
    }
  }

  grouping traffic {
    description
      "Overall traffic counters.";
    container l2 {
      description
        "Layer 2 traffic counters.";
      uses l2-traffic;
    }
    container l3 {
      description
        "Layer 3 traffic counters.";
      uses l3-traffic;
    }
    container qos {
      description
        "QoS traffic counters.";
      uses qos;
    }
  }

  grouping control-plane {
    description
      "Control plane packet counters.";
    container ingress {
      description
        "Control plane ingress counters.";
      container traffic {
        description
          "Control plane ingress packets received.";
        uses basic-packets-bytes-32;
      }
      container discards {
        description
          "Control plane ingress packet discard counters.";
        uses basic-packets-bytes-32;
        container policy {
          description
            "Number of control plane packets discarded
             due to policy.";
          uses basic-packets-32;
        }
      }
    }
  }

  grouping errors-l2-rx {
    description
      "Layer 2 ingress frame error discard counters.";
    container rx {
      description
        "Layer 2 ingress frame receive error discard counters.";
      leaf frames {
        type uint32;
        description
          "The number of frames discarded due to errors with the received frame.";
      }
      leaf crc-error {
        type uint32;
        description
          "The number of frames discarded due to CRC error.";
      }
      leaf invalid-mac {
        type uint32;
        description
          "The number of frames discarded due to an invalid
           MAC address.";
      }
      leaf invalid-vlan {
        type uint32;
        description
          "The number of frames discarded due to an invalid
           VLAN tag.";
      }
      leaf invalid-frame {
        type uint32;
        description
          "The number of invalid frames discarded due to other reasons.";
      }
    }
  }

  grouping errors-l3-rx {
    description
      "Layer 3 ingress packet error discard counters.";
    container rx {
      description
        "Layer 3 ingress packet receive error discard counters.";
      leaf packets {
        type uint32;
        description
          "The number of Layer 3 packets discarded due to errors in the received packet.";
      }
      leaf checksum-error {
        type uint32;
        description
          "The number of received packets discarded due to a checksum
           error.";
      }
      leaf mtu-exceeded {
        type uint32;
        description
          "The number of received packets discarded due to MTU
           exceeded.";
      }
      leaf invalid-packet {
        type uint32;
        description
          "The number of invalid packets discarded due to other reasons.";
      }
      leaf ttl-expired {
        type uint32;
        description
          "The number of received packets discarded due to expired
           TTL.";
      }
    }
    leaf no-route {
      type uint32;
      description
        "The number of packets discarded due to no route.";
    }
    leaf invalid-sid {
      type uint32;
      description
        "The number of packets discarded due to an invalid Segment Routing (SR) SID.";
    }
    leaf invalid-label {
      type uint32;
      description
        "The number of packets discarded due to an invalid MPLS label.";
    }
  }

  grouping errors-l3-hw {
    description
      "Hardware error discard counters.";
    leaf packets {
      type uint32;
      description
        "The number of packets discarded due to hardware errors.";
    }
    leaf parity-error {
      type uint32;
      description
        "The number of packets discarded due to parity errors.";
    }
  }

  grouping errors-rx {
    description
      "Ingress error discard counters.";
    container l2 {
      description
        "Layer 2 received frame error discard counters.";
      uses errors-l2-rx;
    }
    container l3 {
      description
        "Layer 3 received packet error discard counters.";
      uses errors-l3-rx;
    }
    container hardware {
      description
        "Hardware error discard counters.";
      uses errors-l3-hw;
    }
  }

  grouping errors-l2-tx {
    description
      "Layer 2 transmit error discard counters.";
    container tx {
      description
        "Layer 2 transmit frame error discard counters.";
      leaf frames {
        type uint32;
        description
          "The number of Layer 2 frames discarded due to errors when
           transmitting.";
      }
    }
  }

  grouping errors-l3-tx {
    description
      "Layer 3 transmit error discard counters.";
    container tx {
      description
        "Layer 3 transmit packet error discard counters.";
      leaf packets {
        type uint32;
        description
          "The number of Layer 3 packets discarded due to errors when
           transmitting.";
      }
    }
  }

  grouping errors-tx {
    description
      "Egress error discard counters.";
    container l2 {
      description
        "Layer 2 transmit frame error discard counters.";
      uses errors-l2-tx;
    }
    container l3 {
      description
        "Layer 3 transmit packet error discard counters.";
      uses errors-l3-tx;
    }
  }

  grouping policy-l2-rx {
    description
      "Layer 2 policy ingress packet discard
       counters.";
    leaf frames {
      type uint32;
      description
        "The number of Layer 2 frames discarded due
         to policy.";
    }
    leaf acl {
      type uint32;
      description
        "The number of frames discarded due to
         Layer 2 ACL.";
    }
  }

  grouping policy-l3-rx {
    description
      "Layer 3 policy ingress packet discard
       counters.";
    leaf packets {
      type uint32;
      description
        "The number of Layer 3 packets discarded due
         to policy.";
    }
    leaf acl {
      type uint32;
      description
        "The number of packets discarded due to
         Layer 3 ACL.";
    }
    container policer {
      description
        "Ingress policer violations discard counters.";
      uses basic-packets-bytes-32;
    }
    leaf null-route {
      type uint32;
      description
        "The number of packets discarded due to matching a
         null route.";
    }
    leaf rpf {
      type uint32;
      description
        "The number of packets discarded due to failing Reverse
         Path Forwarding (RPF) check failure.";
    }
    leaf ddos {
      type uint32;
      description
        "The number of packets discarded due to DDoS
         protection.";
    }
  }

  grouping policy-rx {
    description
      "Policy-related ingress packet
       discard counters.";
    container l2 {
      description
        "Layer 2 policy ingress packet discard counters.";
      uses policy-l2-rx;
    }
    container l3 {
      description
        "Layer 3 policy ingress packet discard counters.";
      uses policy-l3-rx;
    }
  }

  grouping policy-l3-tx {
    description
      "Layer 3 policy egress packet discard counters.";
    leaf acl {
      type uint32;
      description
        "The number of packets discarded due to Layer 3
         egress ACL.";
    }
    container policer {
      description
        "Egress policer violations discard counters.";
      uses basic-packets-bytes-32;
    }
  }

  grouping policy-tx {
    description
      "Policy egress packet discard counters.";
    container l3 {
      description
        "Layer 3 policy egress packet discard counters.";
      uses policy-l3-tx;
    }
  }

  grouping interface {
    description
      "Interface-level packet traffic and discard counters.";
    container ingress {
      description
        "Ingress counters.";
      container traffic {
        description
          "Ingress traffic counters.";
        uses traffic;
      }
      container discards {
        description
          "Ingress discard counters.";
        container l2 {
          description
            "Ingress Layer 2 frame discard counters.";
          uses l2-traffic;
        }
        container l3 {
          description
            "Ingress Layer 3 packet discard counters.";
          uses l3-traffic;
        }
        container errors {
          description
            "Ingress packet error discard counters.";
          uses errors-rx;
        }
        container policy {
          description
            "Policy-related ingress packet discard counters.";
          uses policy-rx;
        }
        container no-buffer {
          description
            "Ingress packet discard counters due to buffer
             unavailability.";
          uses qos;
        }
      }
    }
    container egress {
      description
        "Egress counters.";
      container traffic {
        description
          "Egress traffic counters.";
        uses traffic;
      }
      container discards {
        description
          "Egress packet and frame discard counters.";
        container l2 {
          description
            "Layer 2 egress frame discard counters.";
          uses l2-traffic;
        }
        container l3 {
          description
            "Layer 3 egress packet discard counters.";
          uses l3-traffic;
        }
        container errors {
          description
            "Egress packet error discard counters.";
          uses errors-tx;
        }
        container policy {
          description
            "Policy-related egress packet discard counters.";
          uses policy-tx;
        }
        container no-buffer {
          description
            "Egress packet discard counters due to buffer
             unavailability.";
          uses qos;
        }
      }
    }
    container control-plane {
      description
        "Control plane packet counters.";
      uses control-plane;
    }
  }

  /*
   * Main structure definition
   */

  sx:structure packet-discard-reporting {
    description
      "Specifies the abstract structure of packet discard reporting data.";
    list interface {
      key "name";
      description
        "Indicates a list of interfaces for which packet discard reporting
         data is provided.";
      leaf name {
        type string;
        description
          "Indicates the name of the interface.";
      }
      uses interface;
    }
  }
}


<CODE ENDS>
]]></artwork></figure>

</section>
<section anchor="security"><name>Security Considerations</name>

<t>The document defines a YANG module using <xref target="RFC8791"/>. As such, this document does
not define data nodes. Following  the guidance in <xref section="3.7" sectionFormat="of" target="I-D.ietf-netmod-rfc8407bis"/>,
the YANG security template is not used.</t>

</section>
<section anchor="iana"><name>IANA Considerations</name>

<t>IANA is requested to register the following URI in the "ns" subregistry within
   the "IETF XML Registry" <xref target="RFC3688"/>:</t>

<figure><artwork><![CDATA[
   URI:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Registrant Contact:  The IESG.
   XML:  N/A; the requested URI is an XML namespace.
]]></artwork></figure>

<t>IANA is requested to register the following YANG module in the "YANG Module
   Names" subregistry <xref target="RFC6020"/> within the "YANG Parameters" registry:</t>

<figure><artwork><![CDATA[
   Name:  ietf-packet-discard-reporting
   Namespace:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Prefix:  plr
   Maintained by IANA?  N
   Reference:  RFC XXXX
]]></artwork></figure>

</section>
<section anchor="contributors"><name>Contributors</name>

<figure><artwork><![CDATA[
Nadav Chachmon
Cisco Systems, Inc.
170 West Tasman Dr.
San Jose, CA 95134
United States of America
Email: nchachmo@cisco.com
]]></artwork></figure>

</section>
<section anchor="acknowledgements"><name>Acknowledgments</name>
<t>The content of this document has benefitted from feedback from JR Rivers, Ronan Waide, Chris DeBruin, and Marcoz Sanz.</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC8791">
  <front>
    <title>YANG Data Structure Extensions</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Björklund" initials="M." surname="Björklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document describes YANG mechanisms for defining abstract data structures with YANG.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8791"/>
  <seriesInfo name="DOI" value="10.17487/RFC8791"/>
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC6020">
  <front>
    <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <date month="October" year="2010"/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6020"/>
  <seriesInfo name="DOI" value="10.17487/RFC6020"/>
</reference>

<reference anchor="RFC3688">
  <front>
    <title>The IETF XML Registry</title>
    <author fullname="M. Mealling" initials="M." surname="Mealling"/>
    <date month="January" year="2004"/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="81"/>
  <seriesInfo name="RFC" value="3688"/>
  <seriesInfo name="DOI" value="10.17487/RFC3688"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>


<reference anchor="RED93" >
  <front>
    <title>Random Early Detection gateways for Congestion Avoidance</title>
    <author initials="V." surname="Jacobson">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


<reference anchor="RFC2475">
  <front>
    <title>An Architecture for Differentiated Services</title>
    <author fullname="S. Blake" initials="S." surname="Blake"/>
    <author fullname="D. Black" initials="D." surname="Black"/>
    <author fullname="M. Carlson" initials="M." surname="Carlson"/>
    <author fullname="E. Davies" initials="E." surname="Davies"/>
    <author fullname="Z. Wang" initials="Z." surname="Wang"/>
    <author fullname="W. Weiss" initials="W." surname="Weiss"/>
    <date month="December" year="1998"/>
    <abstract>
      <t>This document defines an architecture for implementing scalable service differentiation in the Internet. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2475"/>
  <seriesInfo name="DOI" value="10.17487/RFC2475"/>
</reference>

<reference anchor="RFC8289">
  <front>
    <title>Controlled Delay Active Queue Management</title>
    <author fullname="K. Nichols" initials="K." surname="Nichols"/>
    <author fullname="V. Jacobson" initials="V." surname="Jacobson"/>
    <author fullname="A. McGregor" initials="A." role="editor" surname="McGregor"/>
    <author fullname="J. Iyengar" initials="J." role="editor" surname="Iyengar"/>
    <date month="January" year="2018"/>
    <abstract>
      <t>This document describes CoDel (Controlled Delay) -- a general framework that controls bufferbloat-generated excess delay in modern networking environments. CoDel consists of an estimator, a setpoint, and a control loop. It requires no configuration in normal Internet deployments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8289"/>
  <seriesInfo name="DOI" value="10.17487/RFC8289"/>
</reference>

<reference anchor="RFC1213">
  <front>
    <title>Management Information Base for Network Management of TCP/IP-based internets: MIB-II</title>
    <author fullname="K. McCloghrie" initials="K." surname="McCloghrie"/>
    <author fullname="M. Rose" initials="M." surname="Rose"/>
    <date month="March" year="1991"/>
    <abstract>
      <t>This memo defines the second version of the Management Information Base (MIB-II) for use with network management protocols in TCP/IP-based internets. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="17"/>
  <seriesInfo name="RFC" value="1213"/>
  <seriesInfo name="DOI" value="10.17487/RFC1213"/>
</reference>

<reference anchor="RFC7270">
  <front>
    <title>Cisco-Specific Information Elements Reused in IP Flow Information Export (IPFIX)</title>
    <author fullname="A. Yourtchenko" initials="A." surname="Yourtchenko"/>
    <author fullname="P. Aitken" initials="P." surname="Aitken"/>
    <author fullname="B. Claise" initials="B." surname="Claise"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>This document describes some additional IP Flow Information Export (IPFIX) Information Elements in the range of 1-127, which is the range compatible with field types used by NetFlow version 9 in RFC 3954, as specified in the IPFIX Information Model in RFC 7012.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7270"/>
  <seriesInfo name="DOI" value="10.17487/RFC7270"/>
</reference>

<reference anchor="RFC3444">
  <front>
    <title>On the Difference between Information Models and Data Models</title>
    <author fullname="A. Pras" initials="A." surname="Pras"/>
    <author fullname="J. Schoenwaelder" initials="J." surname="Schoenwaelder"/>
    <date month="January" year="2003"/>
    <abstract>
      <t>There has been ongoing confusion about the differences between Information Models and Data Models for defining managed objects in network management. This document explains the differences between these terms by analyzing how existing network management model specifications (from the IETF and other bodies such as the International Telecommunication Union (ITU) or the Distributed Management Task Force (DMTF)) fit into the universe of Information Models and Data Models. This memo documents the main results of the 8th workshop of the Network Management Research Group (NMRG) of the Internet Research Task Force (IRTF) hosted by the University of Texas at Austin. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="3444"/>
  <seriesInfo name="DOI" value="10.17487/RFC3444"/>
</reference>

<reference anchor="RFC8340">
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="L. Berger" initials="L." role="editor" surname="Berger"/>
    <date month="March" year="2018"/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="215"/>
  <seriesInfo name="RFC" value="8340"/>
  <seriesInfo name="DOI" value="10.17487/RFC8340"/>
</reference>

<reference anchor="RFC1157">
  <front>
    <title>Simple Network Management Protocol (SNMP)</title>
    <author fullname="J.D. Case" initials="J.D." surname="Case"/>
    <author fullname="M. Fedor" initials="M." surname="Fedor"/>
    <author fullname="M.L. Schoffstall" initials="M.L." surname="Schoffstall"/>
    <author fullname="J. Davin" initials="J." surname="Davin"/>
    <date month="May" year="1990"/>
    <abstract>
      <t>This RFC is a re-release of RFC 1098, with a changed "Status of this Memo" section plus a few minor typographical corrections. This memo defines a simple protocol by which management information for a network element may be inspected or altered by logically remote users. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="1157"/>
  <seriesInfo name="DOI" value="10.17487/RFC1157"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC7011">
  <front>
    <title>Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of Flow Information</title>
    <author fullname="B. Claise" initials="B." role="editor" surname="Claise"/>
    <author fullname="B. Trammell" initials="B." role="editor" surname="Trammell"/>
    <author fullname="P. Aitken" initials="P." surname="Aitken"/>
    <date month="September" year="2013"/>
    <abstract>
      <t>This document specifies the IP Flow Information Export (IPFIX) protocol, which serves as a means for transmitting Traffic Flow information over the network. In order to transmit Traffic Flow information from an Exporting Process to a Collecting Process, a common representation of flow data and a standard means of communicating them are required. This document describes how the IPFIX Data and Template Records are carried over a number of transport protocols from an IPFIX Exporting Process to an IPFIX Collecting Process. This document obsoletes RFC 5101.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="77"/>
  <seriesInfo name="RFC" value="7011"/>
  <seriesInfo name="DOI" value="10.17487/RFC7011"/>
</reference>


<reference anchor="I-D.ietf-netmod-rfc8407bis">
   <front>
      <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
      <author fullname="Andy Bierman" initials="A." surname="Bierman">
         <organization>YumaWorks</organization>
      </author>
      <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
         <organization>Orange</organization>
      </author>
      <author fullname="Qin Wu" initials="Q." surname="Wu">
         <organization>Huawei</organization>
      </author>
      <date day="27" month="September" year="2024"/>
      <abstract>
	 <t>   This memo provides guidelines for authors and reviewers of
   specifications containing YANG modules, including IANA-maintained
   modules.  Recommendations and procedures are defined, which are
   intended to increase interoperability and usability of Network
   Configuration Protocol (NETCONF) and RESTCONF protocol
   implementations that utilize YANG modules.  This document obsoletes
   RFC 8407.

   Also, this document updates RFC 8126 by providing additional
   guidelines for writing the IANA considerations for RFCs that specify
   IANA-maintained modules.  The document also updates RFC 6020 by
   clarifying how modules and their revisions are handled by IANA.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netmod-rfc8407bis-17"/>
   
</reference>




    </references>

</references>


<?line 1120?>

<section anchor="wheredropped"><name>Where do packets get dropped?</name>
<t><xref target="ex-drop"/> depicts an example of where and why packets may be discarded in a typical single-ASIC, shared-buffered type device. Packets ingress on the left and egress on the right.</t>

<figure title="Example of where packets get dropped" anchor="ex-drop"><artwork><![CDATA[
                                                      +----------+
                                                      |          |
                                                      |  CPU     |
                                                      |          |
                                                      +--+---^---+
                                                from_cpu |   | to_cpu
                                                         |   |
                          +------------------------------v---+-------------------------------+
                          |                                                                  |

            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+
            |          |  |          |  |          |  |          |  |          |  |          |  |          |
 Packet rx ->  Phy     +-->  Mac     +--> Ingress  +--> Buffers  +--> Egresss  +-->  Mac     +-->  Phy     |>  Packet tx
            |          |  |          |  |  Pipeline|  |          |  |  Pipeline|  |          |  |          |
            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+

  Intended                               policy/acl                  policy/acl
  Discards:                              policy/policer              policy/policer
                                         policy/urpf
                                         policy/null-route

Unintended                 error/rx/l2   error/l3/rx   no-buffer     error/l3/tx
  Discards:                              error/local
                                         error/l3/no-route
                                         error/l3/rx/ttl-expired

]]></artwork></figure>

<section anchor="discard-class-descriptions"><name>Discard Class Descriptions</name>

<dl>
  <dt>discards/policy/:</dt>
  <dd>
    <t>These are intended discards, meaning packets dropped by a device due to a configured policy. There are multiple sub-classes.</t>
  </dd>
  <dt>discards/error/l2/rx/:</dt>
  <dd>
    <t>Frames discarded due to errors in the received L2 frame. There are multiple sub-classes, such as those resulting from failing CRC, invalid header, invalid MAC address, or invalid VLAN.</t>
  </dd>
  <dt>discards/error/l3/rx/:</dt>
  <dd>
    <t>These are discards which occur due to errors in the received packet, indicating an upstream problem rather than an issue with the device dropping the errored packets. There are multiple sub-classes, including header checksum errors, MTU exceeded, and invalid packet, i.e. due to incorrect version, incorrect header length, or invalid options.</t>
  </dd>
  <dt>discards/error/l3/rx/ttl-expired:</dt>
  <dd>
    <t>There can be multiple causes for TTL-expired (or Hop limit exceeded) discards: i) trace-route; ii) TTL (Hop limit) set too low by the end-system; iii) routing loops.</t>
  </dd>
  <dt>discards/error/l3/no-route/:</dt>
  <dd>
    <t>Discards occur due to a packet not matching any route.</t>
  </dd>
  <dt>discards/error/local/:</dt>
  <dd>
    <t>A device may discard packets within its switching pipeline due to internal errors, such as parity errors. Any errored discards not explicitly assigned to the above classes are also accounted for here.</t>
  </dd>
  <dt>discards/no-buffer/:</dt>
  <dd>
    <t>Discards occur due to no available buffer to enqueue the packet. These can be tail-drop discards or due to an active queue management algorithm, such as RED <xref target="RED93"/> or CODEL <xref target="RFC8289"/>.</t>
  </dd>
</dl>

</section>
</section>
<section anchor="implementation-experience"><name>Implementation Experience</name>
<t>This appendix captures the authors' experience gained from implementing and applying this information model across multiple vendors' platforms, as guidance for future implementers.</t>

<t><list style="numbers" type="1">
  <t>The number and granularity of classes described in Section 3 represent a compromise.  It aims to offer sufficient detail to enable appropriate automated actions while avoiding excessive detail, which may hinder quick problem identification.  Additionally, it helps limit the quantity of data produced per interface, thus constraining the data volume and device CPU impacts.  Although further granularity is possible, the scheme described has generally proven to be sufficient for the task of auto-mitigating unintended packet loss.</t>
  <t>There are many possible ways to define the discard classification tree.  For example, we could have used a multi-rooted tree, rooted in each protocol.  Instead, we opted to define a tree where protocol discards and causal discards are accounted for orthogonally.  This decision reduces the number of combinations of classes and has proven sufficient for determining mitigation actions.</t>
  <t>NoBuffer discards can be realized differently with different memory architectures. Whether a NoBuffer discard is attributed to ingress or egress can differ accordingly.  For successful auto-mitigation, discards due to egress interface congestion should be reported on egress, while discards due to device-level congestion (e.g. due to exceeding the device forwarding rate) should be reported on ingress.</t>
  <t>Platforms often account for the number of packets discarded where the TTL has expired (or Hop Limit exceeded), and the device CPU has returned an ICMP Time Exceeded message.  There is typically a policer applied to limit the number of packets sent to the device CPU, however, which implicitly limits the rate of TTL discards that are processed.  One method to account for all packet discards due to TTL expired, even those that are dropped by a policer when being forwarded to the CPU, is to use accounting of all ingress packets received with TTL=1.</t>
  <t>Where no route discards are implemented with a default null route, separate discard accounting is required for any explicit null routes configured, in order to differentiate between interface/ingress/discards/policy/null-route/packets and interface/ingress/discards/errors/no-route/packets.</t>
  <t>It is useful to account separately for transit packets discarded by ACLs or policers, and packets discarded by ACLs or policers which limit the number of packets to the device control plane.</t>
  <t>It is not possible to identify a configuration error - e.g., when intended discards are unintended - with device packet loss metrics alone.  For example, additional context is needed to determine if ACL discards are intended or due to a misconfigured ACL, i.e., with configuration validation before deployment or by detecting a significant change in ACL discards after a configuration change compared to before.</t>
  <t>Where traffic byte counters need to be 64-bit, packet and discard counters that increase at a lower rate may be encoded in fewer bits, e.g., 32-bit.</t>
  <t>Aggregate counters need to be able to deal with the possibility of discontinuities in the underlying counters.</t>
  <t>In cases where the reporting device is the source or destination of a tunnel, the ingress protocol for a packet may differ from the egress protocol; if IPv4 is tunnelled over IPv6 for example.  Some implementations may attribute egress discards to the ingress protocol.</t>
  <t>While the classification tree is seven layers deep, a minimal implementation may only implement the top six layers.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
ejrdiGRlP8tKTLTFMs5Wbzgt70VtHPPIVOMg1CdqT4quvsHN+1vVAYLFjTaU
AJIsDfiiMfbQ7bnIEy8arjXak4cZ7ckao+EC930HC8PiQIGWjqJcBItV8rBf
kQcqr1yHBYg01umq2cRsBByrcm4VX9hqlXSO6OrGbJRTpVm1ImiUzNka7fzU
QnGtV82wArS2GoMXNZDI9lJj012Fwj89/0jMUv6HVSBogukGzVRaC4JPFUjM
1ur1YbFNHgSaGvO2v655q4qzBYEACBZVLfk1Tpv7XbUPS+NXcXioK5zCK2hH
MDYAzYOoZ2qD7LbqCYyoOluhFsG4rAq8mfnFKmbaEcx8P/kMoa4ybyXn3tCt
BmEjZlY2wz2DXC2VVrk4Bb/1lhbmwjD76wyzUtSs1NYPY8WuhekrxoA+muhe
2GDeTP3Dwk6vhtjbAq13hbYCXuxTN6miYLstCkmLmNZ3Xd7NuJbdsUFY1Qqa
LXj3Asim8jexhxYuFyJVucR1ZvUQFeJHv4a7TjH5QrNijRQX1NYJikvAJgPO
S5U9ULzkbnWEqonIoTcv9TZR0hLI9LzCOBR7VxKzYpT6+UttQN8oKFSqzjCm
Uta/WP7GFC8zm/2oQdUgE1zmAP4XBc1UCWqAwjnU/0XhoNw3DeWK79nwUIdk
K+DDEgL/AAD//XR4LjJvugI6FsuHAE/XZWoCk7fq6tKBJaiadXh/DR3eLxvC
h1XiSvcbaXE5h3QfGpeySY36rBZ+jTbz+03qXKgR8SBwlgauE1ozrCu0bfru
1qX4nYA8u35bgE6NvkKllJA8pE41QtiqVAoud1/Z70M3NZpLu+vr0zqdVyCa
XU+bpq6KkDUCFMVcVNxNaZW4ljpTmQce3RpomNPR7Tdmd9+jq8vH4urkqAUw
qknyO4BGV/XRYM2JP2uUZ7fNRvknfc9Cu328V4Z9TfxmBVDSGjK7BVi+FBQ8
Rg0MtdRt83cnyhGt6+DWncIW476Vjo3iczfKvt/MtmRRNht+v3F4w/xWINaU
1sqos9tVWgLz/jWmH/og3No8zdaceZiO1+PpQ085iosnzVOPmSxMJ825QNxA
skGUuJrU+1+K1E7HawrwPywwfBBqt5H6+MvYpw1luWSfsnvap03ZW7IU7vBF
gnLuY91EhcrJ1Cd9NNQPuRK6vkJbmapkdBxf6/n3DWQajIkdXgM5PDxtdrSa
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
4NdTmBdyJzDx+n+uYsCmC7YAAA==

-->

</rfc>

