<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.19 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-opsawg-discardmodel-04" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="IM for Packet Discard Reporting">An Information Model for Packet Discard Reporting</title>

    <author initials="J." surname="Evans" fullname="John Evans">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>1 Principal Place, Worship Street</street>
          <city>London</city>
          <code>EC2A 2FA</code>
          <country>UK</country>
        </postal>
        <email>jevanamz@amazon.co.uk</email>
      </address>
    </author>
    <author initials="O." surname="Pylypenko" fullname="Oleksandr Pylypenko">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>410 Terry Ave N</street>
          <city>Seattle</city>
          <region>WA</region>
          <code>98109</code>
          <country>US</country>
        </postal>
        <email>opyl@amazon.com</email>
      </address>
    </author>
    <author initials="J." surname="Haas" fullname="Jeffrey Haas">
      <organization>Juniper Networks</organization>
      <address>
        <postal>
          <street>1133 Innovation Way</street>
          <city>Sunnyvale</city>
          <region>CA</region>
          <code>94089</code>
          <country>US</country>
        </postal>
        <email>jhaas@juniper.net</email>
      </address>
    </author>
    <author initials="A." surname="Kadosh" fullname="Aviran Kadosh">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>170 West Tasman Dr.</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>US</country>
        </postal>
        <email>akadosh@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair">
      <organization>Orange</organization>
      <address>
        <postal>
          <country>France</country>
        </postal>
        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <date year="2024" month="September" day="19"/>

    <area>Operations and Management Area</area>
    <workgroup>OPSAWG</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 78?>

<t>The primary function of a network is to transport and deliver packets according to service level objectives.  Understanding both where and why packet loss occurs within a network is essential for effective network operation.  Device-reported packet loss provides the most direct signal for network operations to identify the customer impact resulting from unintended packet loss.  This document defines an information model for packet loss reporting, which classifies these signals to enable automated network mitigation of unintended packet loss.</t>



    </abstract>



  </front>

  <middle>


<?line 82?>

<section anchor="introduction"><name>Introduction</name>
<t>To effectively automate network operations, a network operator must be able to detect anomalous packet loss, determine its root cause, and then apply appropriate actions to mitigate any customer-impacting issues.  Some packet loss is normal or intended in IP/MPLS networks, however.  Therefore, precise classification of packet loss signals is crucial both to ensure that anomalous packet loss is easily detected and that the right action or sequence of actions is taken to mitigate the impact, as taking the wrong action can make problems worse.</t>

<t>Existing metrics for reporting packet loss, such as ifInDiscards, ifOutDiscards, ifInErrors, and ifOutErrors defined in <xref target="RFC1213"/>, are insufficient for several reasons. First, they lack precision; for instance, ifInDiscards aggregates all discarded inbound packets without specifying the cause, making it challenging to distinguish between intended and unintended discards. Second, these definitions are ambiguous, leading to inconsistent vendor implementations. For example, in some implementations ifInErrors accounts only for errored packets that are dropped, while in others, it includes all errored packets, whether they are dropped or not. Many implementations support more discard metrics than these, however, they have been inconsistently implemented due to the lack of a standardised classification scheme and clear semantics for packet loss reporting. For example, <xref target="RFC7270"/> provides support for reporting discards per flow in IPFIX using forwardingStatus, however, the defined drop reason codes also lack sufficient clarity (e.g., the "For us" reason code) to support automated root cause analysis and impact mitigation.</t>

<t>Hence, this document presents an information model for packet loss reporting, introducing a classification scheme to facilitate automated mitigation of unintended packet loss. The model addresses the aforementioned issues while remaining protocol-agnostic and implementation-independent, in accordance with <xref target="RFC3444"/>.</t>

<t>The specific implementations of this information model (i.e., protocols and associated data models) are outside the scope of this document.  The scope of this document is limited to reporting packet loss at Layer 3 and frames discarded at Layer 2, although the information model might be extended in future to cover segments dropped at Layer 4. This document considers only the signals that may trigger automated mitigation plans and not how they are defined or executed.</t>

<t><xref target="problem"/> describes the problem to be solved. <xref target="model"/> describes the information model and requirements with a set of examples.  <xref target="mapping"/> provides examples of discard signal-to-cause-to-auto-mitigation action mapping.  <xref target="module"/> presents the information model as an abstract data structure in YANG, in accordance with <xref target="RFC8791"/>.  Appendix A provides an example of where packets may be discarded in a device.  Appendix B details the authors' experience from implementing this model.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<?line -18?>

<t>A packet discard is any packet dropped by a device, whether intentionally or unintentionally.</t>

<t>Intended packet loss refers to packet discards that occur due to deliberate network policies or configurations—such as Access Control Lists (ACLs) or policing mechanisms—designed to enforce security or quality of service.</t>

<t>Unintended packet loss refers to packet discards resulting from network errors, misconfigurations, hardware failures, or other anomalies not aligned with the network operator's intended behaviour. These losses negatively impact network performance and service delivery.</t>

<t>For example, intended packet loss occurs when packets are dropped because they match a security policy denying certain traffic types. Unintended packet loss might happen due to a faulty interface causing corrupted packets, leading to their discard.</t>

<t>The meanings of the symbols in the YANG tree diagrams are defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="problem"><name>Problem Statement</name>
<t>At the highest-level, unintended packet loss is the discarding of packets that the network operator otherwise intends to deliver, i.e. which indicates an error state.  There are many possible reasons for unintended packet loss, including: erroring links may corrupt packets in transit; incorrect routing tables may result in packets being dropped because they do not match a valid route; configuration errors may result in a valid packet incorrectly matching an Access Control List (ACL) and being dropped.  While the specific definition of unintended packet loss is network-dependent, for any network there are a small set of potential actions that can be taken to minimise customer impact by automatically mitigating unintended packet loss:</t>

<t><list style="numbers" type="1">
  <t>Take a device, link, or set of devices and/or links out of service.</t>
  <t>Return a device, link, or set of devices and/or links back into service.</t>
  <t>Move traffic to other links or devices.</t>
  <t>Roll back a recent change to a device that might have caused the problem.</t>
  <t>Escalate to a network operator as a last resort.</t>
</list></t>

<t>A precise signal of impact is crucial, as taking the wrong action can be worse than taking no action. For example, taking a congested device out of service can make congestion worse by moving the traffic to other links or devices, which are already congested.</t>

<t>To detect whether device-reported discards indicate a problem and to determine what actions should be taken to mitigate the impact and remediate the cause, depends on four primary features of the packet loss signal:</t>

<dl>
  <dt>FEATURE-LOSS-CAUSE:</dt>
  <dd>
    <t>The cause of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-RATE:</dt>
  <dd>
    <t>The rate and/or degree of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-DURATION:</dt>
  <dd>
    <t>The duration of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-LOCATION:</dt>
  <dd>
    <t>The location of the loss.</t>
  </dd>
</dl>

<t>FEATURE-LOSS-RATE, FEATURE-LOSS-DURATION, and FEATURE-LOSS-LOCATION are already addressed with passive monitoring statistics, for example, obtained with SNMP <xref target="RFC1157"/> / MIB-II <xref target="RFC1213"/> or NETCONF <xref target="RFC6241"/>. FEATURE-LOSS-CAUSE, however, is dependent on the classification scheme used for packet loss reporting. The next section defines a new classification scheme to address this problem.</t>

</section>
<section anchor="model"><name>Information Model</name>

<section anchor="rationale"><name>Design Rationale</name>

<t>This document uses YANG <xref target="RFC6020"/> to represent the information model for three main reasons. First, YANG, along with its data structure extensions <xref target="RFC8791"/>, allows designers to define the model in an abstract way, decoupled from specific implementations. This abstraction ensures consistency and provides flexibility for diverse potential implementations, with the structure and groupings easily adaptable to data models such as those specific to SNMP <xref target="RFC1157"/>, NETCONF <xref target="RFC6241"/>, RESTCONF <xref target="RFC8040"/>, or IPFIX <xref target="RFC7011"/>.  Second, this approach ensures a lossless translation from the information model to a YANG data model, preserving both semantics and structure. Lastly, YANG capitalises on the community’s broad familiarity with its syntax and use, facilitating easier adoption and evolution.</t>

</section>
<section anchor="structure"><name>Structure</name>
<t>The classification scheme is structured as a hierarchical tree that follows the structure: component/direction/type/layer/sub-type/sub-sub-type/.../metric.  The elements of the tree are defined as follows:</t>

<t><list style="symbols">
  <t>Component: Specifies where in the device the discard is accounted. It can be:
  <list style="symbols">
      <t>interface: Discards associated with a specific network interface.</t>
      <t>control-plane: Discards related to the device's control plane.</t>
      <t>flow: Discards associated with a specific traffic flow.</t>
    </list></t>
  <t>Direction:
  <list style="symbols">
      <t>ingress: Discards occurring on incoming packets or frames.</t>
      <t>egress: Discards occurring on outgoing packets or frames.</t>
    </list></t>
  <t>Type:
  <list style="symbols">
      <t>traffic: Counters for successfully received or transmitted packets or frames.</t>
      <t>discards: Counters for packets or frames that were dropped.</t>
    </list></t>
  <t>Layer:
  <list style="symbols">
      <t>l2: Layer 2 discards, such as frames with CRC errors.</t>
      <t>l3: Layer 3 discards, such as IP packets with invalid headers.</t>
    </list></t>
  <t>Sub-Type:
  <list style="symbols">
      <t>For discards:
      <list style="symbols">
          <t>errors: Discards due to errors in processing packets or frames (e.g., checksum errors).</t>
          <t>policy: Discards due to policy enforcement (e.g., ACL drops).</t>
          <t>no-buffer: Discards due to lack of buffer space (e.g., congestion-related drops).</t>
        </list></t>
    </list></t>
</list></t>

<t>Each sub-type may further contain specific reasons for discards, providing more detailed insight into the cause of packet loss.</t>

<figure><artwork><![CDATA[
  structure packet-discard-reporting:
    +-- interface* [name]
       +-- name             string
       +-- ingress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stat* [address-family]
       |  |  |     +-- address-family    identityref
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stat* [address-family]
       |     |     +-- address-family    identityref
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- rx
       |     |  |     +-- frames?          uint32
       |     |  |     +-- crc-error?       uint32
       |     |  |     +-- invalid-mac?     uint32
       |     |  |     +-- invalid-vlan?    uint32
       |     |  |     +-- invalid-frame?   uint32
       |     |  +-- l3
       |     |  |  +-- rx
       |     |  |  |  +-- packets?          uint32
       |     |  |  |  +-- checksum-error?   uint32
       |     |  |  |  +-- mtu-exceeded?     uint32
       |     |  |  |  +-- invalid-packet?   uint32
       |     |  |  |  +-- ttl-expired?      uint32
       |     |  |  +-- no-route?        uint32
       |     |  |  +-- invalid-sid?     uint32
       |     |  |  +-- invalid-label?   uint32
       |     |  +-- hardware
       |     |     +-- packets?        uint32
       |     |     +-- parity-error?   uint32
       |     +-- policy
       |     |  +-- l2
       |     |  |  +-- frames?   uint32
       |     |  |  +-- acl?      uint32
       |     |  +-- l3
       |     |     +-- packets?      uint32
       |     |     +-- acl?          uint32
       |     |     +-- policer
       |     |     |  +-- packets?   uint32
       |     |     |  +-- bytes?     uint32
       |     |     +-- null-route?   uint32
       |     |     +-- rpf?          uint32
       |     |     +-- ddos?         uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- egress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stat* [address-family]
       |  |  |     +-- address-family    identityref
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stat* [address-family]
       |     |     +-- address-family    identityref
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- tx
       |     |  |     +-- frames?   uint32
       |     |  +-- l3
       |     |     +-- tx
       |     |        +-- packets?   uint32
       |     +-- policy
       |     |  +-- l3
       |     |     +-- acl?       uint32
       |     |     +-- policer
       |     |        +-- packets?   uint32
       |     |        +-- bytes?     uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- control-plane
          +-- ingress
             +-- traffic
             |  +-- packets?   uint32
             |  +-- bytes?     uint32
             +-- discards
                +-- packets?   uint32
                +-- bytes?     uint32
                +-- policy
                   +-- packets?   uint32

]]></artwork></figure>

<t>For additional context, Appendix A provides an example of where packets may be discarded in a device.</t>

</section>
<section anchor="requirements"><name>Requirements</name>
<t>Requirements 1-10 relate to packets forwarded by the device, while requirement 11 relates to packets destined for or originating from the device:</t>

<t><list style="numbers" type="1">
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>MUST</bcp14> be reported.</t>
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>SHOULD</bcp14> be attributed to the physical or logical interface of the device where they occur.</t>
  <t>An individual frame <bcp14>MUST</bcp14> only be accounted for by either the Layer 2 traffic class or the Layer 2 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>An individual packet <bcp14>MUST</bcp14> only be accounted for by either the Layer 3 traffic class or the Layer 3 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>A frame accounted for at Layer 2 <bcp14>SHOULD NOT</bcp14> be accounted for at Layer 3 and vice versa.  An implementation <bcp14>MUST</bcp14> indicate which layers a discard is counted against.</t>
  <t>The aggregate Layer 2 and Layer 3 traffic and discard classes <bcp14>SHOULD</bcp14> account for all underlying frames or packets received, transmitted, and discarded across all other classes.</t>
  <t>The aggregate Quality of Service (QoS) traffic and no buffer discard classes <bcp14>MUST</bcp14> account for all underlying packets received, transmitted, and discarded across all other classes.</t>
  <t>In addition to the Layer 2 and Layer 3 aggregate classes, an individual discarded packet <bcp14>MUST</bcp14> only account against a single error, policy, or no-buffer discard subclass.</t>
  <t>When there are multiple reasons for discarding a packet, the ordering of discard class reporting <bcp14>MUST</bcp14> be defined.</t>
  <t>If Diffserv <xref target="RFC2475"/> is not used, no-buffer discards <bcp14>SHOULD</bcp14> be reported as class0.</t>
  <t>Traffic to the device control plane has its own class, however, traffic from the device control plane <bcp14>SHOULD</bcp14> be accounted for in the same way as other egress traffic.</t>
</list></t>

</section>
<section anchor="examples"><name>Examples</name>

<t>Assuming all the requirements are met, a "good" unicast IPv4 packet received would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/traffic/l3/v4/unicast/packets</t>
  <t>interface/ingress/traffic/l3/v4/unicast/bytes</t>
  <t>interface/ingress/traffic/qos/class_0/packets</t>
  <t>interface/ingress/traffic/qos/class_0/bytes</t>
</list></t>

<t>A received unicast IPv6 packet discarded due to Hop Limit expiry would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/discards/l3/v6/unicast/packets</t>
  <t>interface/ingress/discards/l3/v6/unicast/bytes</t>
  <t>interface/ingress/discards/l3/rx/ttl-expired/packets</t>
</list></t>

<t>An IPv4 packet discarded on egress due to no buffers would increment:</t>

<t><list style="symbols">
  <t>interface/egress/discards/l3/v4/unicast/packets</t>
  <t>interface/egress/discards/l3/v4/unicast/bytes</t>
  <t>interface/egress/discards/no-buffer/class_0/packets</t>
  <t>interface/egress/discards/no-buffer/class_0/bytes</t>
</list></t>

</section>
</section>
<section anchor="mapping"><name>Example Signal-Cause-Mitigation Mapping</name>
<t><xref target="ex-table"/> gives an example discard signal-to-cause-to-mitigation action mapping.  Mappings for a specific network will be dependent on the definition of unintended packet loss for that network.</t>

<texttable title="Example Signal-Cause-Mitigation Mapping" anchor="ex-table">
      <ttcol align='left'>Discard class</ttcol>
      <ttcol align='left'>Cause</ttcol>
      <ttcol align='center'>Discard rate</ttcol>
      <ttcol align='center'>Discard duration</ttcol>
      <ttcol align='center'>Unintended?</ttcol>
      <ttcol align='left'>Possible actions</ttcol>
      <c>ingress/discards/errors/l2/rx</c>
      <c>Upstream device or link error</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Take upstream link or device out-of-service</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Tracert</c>
      <c>&lt;=Baseline</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Convergence</c>
      <c>&gt;Baseline</c>
      <c>O(1s)</c>
      <c>Y</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/rx/ttl-expired</c>
      <c>Routing loop</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Roll-back change</c>
      <c>.*/policy/.*</c>
      <c>Policy</c>
      <c>&#160;</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Convergence</c>
      <c>&gt;Baseline</c>
      <c>O(1s)</c>
      <c>Y</c>
      <c>no action</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Config error</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Roll-back change</c>
      <c>ingress/discards/errors/l3/no-route</c>
      <c>Invalid destination</c>
      <c>&gt;Baseline</c>
      <c>O(10min)</c>
      <c>N</c>
      <c>Escalate to operator</c>
      <c>ingress/discards/errors/local</c>
      <c>Device errors</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Take device out-of-service</c>
      <c>egress/discards/no-buffer</c>
      <c>Congestion</c>
      <c>&lt;=Baseline</c>
      <c>&#160;</c>
      <c>N</c>
      <c>no action</c>
      <c>egress/discards/no-buffer</c>
      <c>Congestion</c>
      <c>&gt;Baseline</c>
      <c>O(1min)</c>
      <c>Y</c>
      <c>Bring capacity back into service or move traffic</c>
</texttable>

<t>The 'Baseline' in the 'Discard Rate' column is both discard class and network dependent.</t>

</section>
<section anchor="module"><name>YANG Module</name>

<t>The "ietf-packet-discard-reporting" uses the "sx" structure defined in <xref target="RFC8791"/>.</t>

<figure><artwork><![CDATA[
  <CODE BEGINS>
module ietf-packet-discard-reporting {
  yang-version 1.1;
  namespace
    "urn:ietf:params:xml:ns:yang:ietf-packet-discard-reporting";
  prefix plr;

  import ietf-yang-structure-ext {
    prefix sx;
    reference
      "RFC 8791: YANG Data Structure Extensions";
  }

  organization
    "IETF OPSAWG (Operations and Management Area Working Group)";
  contact
    "WG Web:   https://datatracker.ietf.org/wg/opsawg/
     WG List:  mailto:opsawg@ietf.org

     Author:   John Evans
               <mailto:jevanamz@amazon.co.uk>

     Author:   Oleksandr Pylypenko
               <mailto:opyl@amazon.com>

     Author:   Jeffrey Haas
               <mailto:jhaas@juniper.net>

     Author:   Aviran Kadosh
               <mailto:akadosh@cisco.com>

     Author:   Mohamed Boucadair
               <mailto:mohamed.boucadair@orange.com>";
  description
    "This module defines an information model for packet discard
     reporting.

     Copyright (c) 2024 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see the
     RFC itself for full legal notices.";

  revision 2024-06-04 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: An Information Model for Packet Discard Reporting";
  }

  /*
   * Groupings
   */

  grouping basic-packets-64 {
    description
      "Grouping for 64-bit Layer 3 packet counters.";
    leaf packets {
      type uint64;
      description
        "Number of Layer 3 packets.";
    }
  }

  grouping basic-packets-bytes-64 {
    description
      "Grouping for 64-bit packet and byte counters.";
    uses basic-packets-64;
    leaf bytes {
      type uint64;
      description
        "Number of Layer 3 bytes.";
    }
  }

  grouping basic-frames-64 {
    description
      "Grouping for 64-bit frame counters.";
    leaf frames {
      type uint64;
      description
        "Number of Layer 2 frames.";
    }
  }

  grouping basic-frames-bytes-64 {
    description
      "Grouping for 64-bit Layer 2 frame and byte counters.";
    uses basic-frames-64;
    leaf bytes {
      type uint64;
      description
        "Number of Layer 2 bytes.";
    }
  }

  grouping basic-packets-32 {
    description
      "Grouping for 32-bit Layer 3 packet counters.";
    leaf packets {
      type uint32;
      description
        "Number of Layer 3 packets.";
    }
  }

  grouping basic-packets-bytes-32 {
    description
      "Grouping for 32-bit Layer 3 packet and byte counters.";
    uses basic-packets-32;
    leaf bytes {
      type uint32;
      description
        "Number of Layer 3 bytes.";
    }
  }

  grouping basic-frames-32 {
    description
      "Grouping for 32-bit Layer 2 frame counters.";
    leaf frames {
      type uint32;
      description
        "Number of Layer 2 frames.";
    }
  }

  grouping basic-frames-bytes-32 {
    description
      "Grouping for 32-bit Layer 2 frame and byte counters.";
    uses basic-frames-32;
    leaf bytes {
      type uint32;
      description
        "Number of Layer 2 bytes.";
    }
  }

  grouping l2-traffic {
    description
      "Layer 2 traffic counters.";
    uses basic-frames-bytes-64;
  }

  identity address-family {
    description
      "Defines a type for the address family.";
  }

  identity ipv4 {
    base address-family;
    description
      "Identity for an IPv4 address family.";
  }

  identity ipv6 {
    base address-family;
    description
      "Identity for an IPv6 address family.";
  }

  identity all {
    base address-family;
    description
      "Identity for all address families.";
  }

  grouping ip {
    description
      "Layer 3 traffic counters per address family.";
    list address-family-stat {
      key "address-family";
      description
        "Reports per address family traffic counters.";
      leaf address-family {
        type identityref {
          base address-family;
        }
        description
          "Specifies an address family.";
      }
      uses basic-packets-bytes-64;
      container unicast {
        description
          "Reports unicast traffic counters.";
        uses basic-packets-bytes-64;
      }
      container multicast {
        description
          "Reports multicast traffic counters.";
        uses basic-packets-bytes-64;
      }
    }
  }

  grouping l3-traffic {
    description
      "Layer 3 traffic counters.";
      uses ip;
  }

  grouping qos {
    description
      "Quality of Service (QoS) traffic
       counters.";
    list class {
      key "id";
      min-elements 1;
      description
        "QoS class traffic counters.";
      leaf id {
        type string;
        description
          "QoS class identifier.";
      }
      uses basic-packets-bytes-64;
    }
  }

  grouping traffic {
    description
      "Overall traffic counters.";
    container l2 {
      description
        "Layer 2 traffic counters.";
      uses l2-traffic;
    }
    container l3 {
      description
        "Layer 3 traffic counters.";
      uses l3-traffic;
    }
    container qos {
      description
        "QoS traffic counters.";
      uses qos;
    }
  }

  grouping control-plane {
    description
      "Control plane packet counters.";
    container ingress {
      description
        "Control plane ingress counters.";
      container traffic {
        description
          "Control plane ingress packets received.";
        uses basic-packets-bytes-32;
      }
      container discards {
        description
          "Control plane ingress packet discard counters.";
        uses basic-packets-bytes-32;
        container policy {
          description
            "Number of control plane packets discarded
             due to policy.";
          uses basic-packets-32;
        }
      }
    }
  }

  grouping errors-l2-rx {
    description
      "Layer 2 ingress frame error discard counters.";
    container rx {
      description
        "Layer 2 ingress frame receive error discard counters.";
      leaf frames {
        type uint32;
        description
          "The number of frames discarded due to errors with the received frame.";
      }
      leaf crc-error {
        type uint32;
        description
          "The number of frames discarded due to CRC error.";
      }
      leaf invalid-mac {
        type uint32;
        description
          "The number of frames discarded due to an invalid
           MAC address.";
      }
      leaf invalid-vlan {
        type uint32;
        description
          "The number of frames discarded due to an invalid
           VLAN tag.";
      }
      leaf invalid-frame {
        type uint32;
        description
          "The number of invalid frames discarded due to other reasons.";
      }
    }
  }

  grouping errors-l3-rx {
    description
      "Layer 3 ingress packet error discard counters.";
    container rx {
      description
        "Layer 3 ingress packet receive error discard counters.";
      leaf packets {
        type uint32;
        description
          "The number of Layer 3 packets discarded due to errors in the received packet.";
      }
      leaf checksum-error {
        type uint32;
        description
          "The number of received packets discarded due to a checksum
           error.";
      }
      leaf mtu-exceeded {
        type uint32;
        description
          "The number of received packets discarded due to MTU
           exceeded.";
      }
      leaf invalid-packet {
        type uint32;
        description
          "The number of invalid packets discarded due to other reasons.";
      }
      leaf ttl-expired {
        type uint32;
        description
          "The number of received packets discarded due to expired
           TTL.";
      }
    }
    leaf no-route {
      type uint32;
      description
        "The number of packets discarded due to no route.";
    }
    leaf invalid-sid {
      type uint32;
      description
        "The number of packets discarded due to an invalid Segment Routing (SR) SID.";
    }
    leaf invalid-label {
      type uint32;
      description
        "The number of packets discarded due to an invalid MPLS label.";
    }
  }

  grouping errors-l3-hw {
    description
      "Hardware error discard counters.";
    leaf packets {
      type uint32;
      description
        "The number of packets discarded due to hardware errors.";
    }
    leaf parity-error {
      type uint32;
      description
        "The number of packets discarded due to parity errors.";
    }
  }

  grouping errors-rx {
    description
      "Ingress error discard counters.";
    container l2 {
      description
        "Layer 2 received frame error discard counters.";
      uses errors-l2-rx;
    }
    container l3 {
      description
        "Layer 3 received packet error discard counters.";
      uses errors-l3-rx;
    }
    container hardware {
      description
        "Hardware error discard counters.";
      uses errors-l3-hw;
    }
  }

  grouping errors-l2-tx {
    description
      "Layer 2 transmit error discard counters.";
    container tx {
      description
        "Layer 2 transmit frame error discard counters.";
      leaf frames {
        type uint32;
        description
          "The number of Layer 2 frames discarded due to errors when
           transmitting.";
      }
    }
  }

  grouping errors-l3-tx {
    description
      "Layer 3 transmit error discard counters.";
    container tx {
      description
        "Layer 3 transmit packet error discard counters.";
      leaf packets {
        type uint32;
        description
          "The number of Layer 3 packets discarded due to errors when
           transmitting.";
      }
    }
  }

  grouping errors-tx {
    description
      "Egress error discard counters.";
    container l2 {
      description
        "Layer 2 transmit frame error discard counters.";
      uses errors-l2-tx;
    }
    container l3 {
      description
        "Layer 3 transmit packet error discard counters.";
      uses errors-l3-tx;
    }
  }

  grouping policy-l2-rx {
    description
      "Layer 2 policy ingress packet discard
       counters.";
    leaf frames {
      type uint32;
      description
        "The number of Layer 2 frames discarded due
         to policy.";
    }
    leaf acl {
      type uint32;
      description
        "The number of frames discarded due to
         Layer 2 ACL.";
    }
  }

  grouping policy-l3-rx {
    description
      "Layer 3 policy ingress packet discard
       counters.";
    leaf packets {
      type uint32;
      description
        "The number of Layer 3 packets discarded due
         to policy.";
    }
    leaf acl {
      type uint32;
      description
        "The number of packets discarded due to
         Layer 3 ACL.";
    }
    container policer {
      description
        "Ingress policer violations discard counters.";
      uses basic-packets-bytes-32;
    }
    leaf null-route {
      type uint32;
      description
        "The number of packets discarded due to matching a
         null route.";
    }
    leaf rpf {
      type uint32;
      description
        "The number of packets discarded due to failing Reverse
         Path Forwarding (RPF) check failure.";
    }
    leaf ddos {
      type uint32;
      description
        "The number of packets discarded due to DDoS
         protection.";
    }
  }

  grouping policy-rx {
    description
      "Policy-related ingress packet
       discard counters.";
    container l2 {
      description
        "Layer 2 policy ingress packet discard counters.";
      uses policy-l2-rx;
    }
    container l3 {
      description
        "Layer 3 policy ingress packet discard counters.";
      uses policy-l3-rx;
    }
  }

  grouping policy-l3-tx {
    description
      "Layer 3 policy egress packet discard counters.";
    leaf acl {
      type uint32;
      description
        "The number of packets discarded due to Layer 3
         egress ACL.";
    }
    container policer {
      description
        "Egress policer violations discard counters.";
      uses basic-packets-bytes-32;
    }
  }

  grouping policy-tx {
    description
      "Policy egress packet discard counters.";
    container l3 {
      description
        "Layer 3 policy egress packet discard counters.";
      uses policy-l3-tx;
    }
  }

  grouping interface {
    description
      "Interface-level packet traffic and discard counters.";
    container ingress {
      description
        "Ingress counters.";
      container traffic {
        description
          "Ingress traffic counters.";
        uses traffic;
      }
      container discards {
        description
          "Ingress discard counters.";
        container l2 {
          description
            "Ingress Layer 2 frame discard counters.";
          uses l2-traffic;
        }
        container l3 {
          description
            "Ingress Layer 3 packet discard counters.";
          uses l3-traffic;
        }
        container errors {
          description
            "Ingress packet error discard counters.";
          uses errors-rx;
        }
        container policy {
          description
            "Policy-related ingress packet discard counters.";
          uses policy-rx;
        }
        container no-buffer {
          description
            "Ingress packet discard counters due to buffer
             unavailability.";
          uses qos;
        }
      }
    }
    container egress {
      description
        "Egress counters.";
      container traffic {
        description
          "Egress traffic counters.";
        uses traffic;
      }
      container discards {
        description
          "Egress packet and frame discard counters.";
        container l2 {
          description
            "Layer 2 egress frame discard counters.";
          uses l2-traffic;
        }
        container l3 {
          description
            "Layer 3 egress packet discard counters.";
          uses l3-traffic;
        }
        container errors {
          description
            "Egress packet error discard counters.";
          uses errors-tx;
        }
        container policy {
          description
            "Policy-related egress packet discard counters.";
          uses policy-tx;
        }
        container no-buffer {
          description
            "Egress packet discard counters due to buffer
             unavailability.";
          uses qos;
        }
      }
    }
    container control-plane {
      description
        "Control plane packet counters.";
      uses control-plane;
    }
  }

  /*
   * Main structure definition
   */

  sx:structure packet-discard-reporting {
    description
      "Specifies the abstract structure of packet discard reporting data.";
    list interface {
      key "name";
      description
        "Indicates a list of interfaces for which packet discard reporting
         data is provided.";
      leaf name {
        type string;
        description
          "Indicates the name of the interface.";
      }
      uses interface;
    }
  }
}


<CODE ENDS>
]]></artwork></figure>

</section>
<section anchor="security"><name>Security Considerations</name>

<t>The document defines a YANG module using <xref target="RFC8791"/>. As such, this document does
not define data nodes. Following  the guidance in <xref section="3.7" sectionFormat="of" target="I-D.ietf-netmod-rfc8407bis"/>,
the YANG security template is not used.</t>

</section>
<section anchor="iana"><name>IANA Considerations</name>

<t>IANA is requested to register the following URI in the "ns" subregistry within
   the "IETF XML Registry" <xref target="RFC3688"/>:</t>

<figure><artwork><![CDATA[
   URI:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Registrant Contact:  The IESG.
   XML:  N/A; the requested URI is an XML namespace.
]]></artwork></figure>

<t>IANA is requested to register the following YANG module in the "YANG Module
   Names" subregistry <xref target="RFC6020"/> within the "YANG Parameters" registry:</t>

<figure><artwork><![CDATA[
   Name:  ietf-packet-discard-reporting
   Namespace:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Prefix:  plr
   Maintained by IANA?  N
   Reference:  RFC XXXX
]]></artwork></figure>

</section>
<section anchor="contributors"><name>Contributors</name>

<figure><artwork><![CDATA[
Nadav Chachmon
Cisco Systems, Inc.
170 West Tasman Dr.
San Jose, CA 95134
United States of America
Email: nchachmo@cisco.com
]]></artwork></figure>

</section>
<section anchor="acknowledgements"><name>Acknowledgments</name>
<t>The content of this document has benefitted from feedback from JR Rivers, Ronan Waide, Chris DeBruin, and Marcoz Sanz.</t>

</section>


  </middle>

  <back>


<references title='References' anchor="sec-combined-references">

    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC8791">
  <front>
    <title>YANG Data Structure Extensions</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Björklund" initials="M." surname="Björklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="June" year="2020"/>
    <abstract>
      <t>This document describes YANG mechanisms for defining abstract data structures with YANG.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8791"/>
  <seriesInfo name="DOI" value="10.17487/RFC8791"/>
</reference>

<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC6020">
  <front>
    <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <date month="October" year="2010"/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6020"/>
  <seriesInfo name="DOI" value="10.17487/RFC6020"/>
</reference>

<reference anchor="RFC3688">
  <front>
    <title>The IETF XML Registry</title>
    <author fullname="M. Mealling" initials="M." surname="Mealling"/>
    <date month="January" year="2004"/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="81"/>
  <seriesInfo name="RFC" value="3688"/>
  <seriesInfo name="DOI" value="10.17487/RFC3688"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC6241">
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname="R. Enns" initials="R." role="editor" surname="Enns"/>
    <author fullname="M. Bjorklund" initials="M." role="editor" surname="Bjorklund"/>
    <author fullname="J. Schoenwaelder" initials="J." role="editor" surname="Schoenwaelder"/>
    <author fullname="A. Bierman" initials="A." role="editor" surname="Bierman"/>
    <date month="June" year="2011"/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6241"/>
  <seriesInfo name="DOI" value="10.17487/RFC6241"/>
</reference>


<reference anchor="RED93" >
  <front>
    <title>Random Early Detection gateways for Congestion Avoidance</title>
    <author initials="V." surname="Jacobson">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


<reference anchor="RFC2475">
  <front>
    <title>An Architecture for Differentiated Services</title>
    <author fullname="S. Blake" initials="S." surname="Blake"/>
    <author fullname="D. Black" initials="D." surname="Black"/>
    <author fullname="M. Carlson" initials="M." surname="Carlson"/>
    <author fullname="E. Davies" initials="E." surname="Davies"/>
    <author fullname="Z. Wang" initials="Z." surname="Wang"/>
    <author fullname="W. Weiss" initials="W." surname="Weiss"/>
    <date month="December" year="1998"/>
    <abstract>
      <t>This document defines an architecture for implementing scalable service differentiation in the Internet. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2475"/>
  <seriesInfo name="DOI" value="10.17487/RFC2475"/>
</reference>

<reference anchor="RFC8289">
  <front>
    <title>Controlled Delay Active Queue Management</title>
    <author fullname="K. Nichols" initials="K." surname="Nichols"/>
    <author fullname="V. Jacobson" initials="V." surname="Jacobson"/>
    <author fullname="A. McGregor" initials="A." role="editor" surname="McGregor"/>
    <author fullname="J. Iyengar" initials="J." role="editor" surname="Iyengar"/>
    <date month="January" year="2018"/>
    <abstract>
      <t>This document describes CoDel (Controlled Delay) -- a general framework that controls bufferbloat-generated excess delay in modern networking environments. CoDel consists of an estimator, a setpoint, and a control loop. It requires no configuration in normal Internet deployments.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8289"/>
  <seriesInfo name="DOI" value="10.17487/RFC8289"/>
</reference>

<reference anchor="RFC1213">
  <front>
    <title>Management Information Base for Network Management of TCP/IP-based internets: MIB-II</title>
    <author fullname="K. McCloghrie" initials="K." surname="McCloghrie"/>
    <author fullname="M. Rose" initials="M." surname="Rose"/>
    <date month="March" year="1991"/>
    <abstract>
      <t>This memo defines the second version of the Management Information Base (MIB-II) for use with network management protocols in TCP/IP-based internets. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="17"/>
  <seriesInfo name="RFC" value="1213"/>
  <seriesInfo name="DOI" value="10.17487/RFC1213"/>
</reference>

<reference anchor="RFC7270">
  <front>
    <title>Cisco-Specific Information Elements Reused in IP Flow Information Export (IPFIX)</title>
    <author fullname="A. Yourtchenko" initials="A." surname="Yourtchenko"/>
    <author fullname="P. Aitken" initials="P." surname="Aitken"/>
    <author fullname="B. Claise" initials="B." surname="Claise"/>
    <date month="June" year="2014"/>
    <abstract>
      <t>This document describes some additional IP Flow Information Export (IPFIX) Information Elements in the range of 1-127, which is the range compatible with field types used by NetFlow version 9 in RFC 3954, as specified in the IPFIX Information Model in RFC 7012.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7270"/>
  <seriesInfo name="DOI" value="10.17487/RFC7270"/>
</reference>

<reference anchor="RFC3444">
  <front>
    <title>On the Difference between Information Models and Data Models</title>
    <author fullname="A. Pras" initials="A." surname="Pras"/>
    <author fullname="J. Schoenwaelder" initials="J." surname="Schoenwaelder"/>
    <date month="January" year="2003"/>
    <abstract>
      <t>There has been ongoing confusion about the differences between Information Models and Data Models for defining managed objects in network management. This document explains the differences between these terms by analyzing how existing network management model specifications (from the IETF and other bodies such as the International Telecommunication Union (ITU) or the Distributed Management Task Force (DMTF)) fit into the universe of Information Models and Data Models. This memo documents the main results of the 8th workshop of the Network Management Research Group (NMRG) of the Internet Research Task Force (IRTF) hosted by the University of Texas at Austin. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="3444"/>
  <seriesInfo name="DOI" value="10.17487/RFC3444"/>
</reference>

<reference anchor="RFC8340">
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="L. Berger" initials="L." role="editor" surname="Berger"/>
    <date month="March" year="2018"/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="215"/>
  <seriesInfo name="RFC" value="8340"/>
  <seriesInfo name="DOI" value="10.17487/RFC8340"/>
</reference>

<reference anchor="RFC1157">
  <front>
    <title>Simple Network Management Protocol (SNMP)</title>
    <author fullname="J.D. Case" initials="J.D." surname="Case"/>
    <author fullname="M. Fedor" initials="M." surname="Fedor"/>
    <author fullname="M.L. Schoffstall" initials="M.L." surname="Schoffstall"/>
    <author fullname="J. Davin" initials="J." surname="Davin"/>
    <date month="May" year="1990"/>
    <abstract>
      <t>This RFC is a re-release of RFC 1098, with a changed "Status of this Memo" section plus a few minor typographical corrections. This memo defines a simple protocol by which management information for a network element may be inspected or altered by logically remote users. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="1157"/>
  <seriesInfo name="DOI" value="10.17487/RFC1157"/>
</reference>

<reference anchor="RFC8040">
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname="A. Bierman" initials="A." surname="Bierman"/>
    <author fullname="M. Bjorklund" initials="M." surname="Bjorklund"/>
    <author fullname="K. Watsen" initials="K." surname="Watsen"/>
    <date month="January" year="2017"/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8040"/>
  <seriesInfo name="DOI" value="10.17487/RFC8040"/>
</reference>

<reference anchor="RFC7011">
  <front>
    <title>Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of Flow Information</title>
    <author fullname="B. Claise" initials="B." role="editor" surname="Claise"/>
    <author fullname="B. Trammell" initials="B." role="editor" surname="Trammell"/>
    <author fullname="P. Aitken" initials="P." surname="Aitken"/>
    <date month="September" year="2013"/>
    <abstract>
      <t>This document specifies the IP Flow Information Export (IPFIX) protocol, which serves as a means for transmitting Traffic Flow information over the network. In order to transmit Traffic Flow information from an Exporting Process to a Collecting Process, a common representation of flow data and a standard means of communicating them are required. This document describes how the IPFIX Data and Template Records are carried over a number of transport protocols from an IPFIX Exporting Process to an IPFIX Collecting Process. This document obsoletes RFC 5101.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="77"/>
  <seriesInfo name="RFC" value="7011"/>
  <seriesInfo name="DOI" value="10.17487/RFC7011"/>
</reference>


<reference anchor="I-D.ietf-netmod-rfc8407bis">
   <front>
      <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
      <author fullname="Andy Bierman" initials="A." surname="Bierman">
         <organization>YumaWorks</organization>
      </author>
      <author fullname="Mohamed Boucadair" initials="M." surname="Boucadair">
         <organization>Orange</organization>
      </author>
      <author fullname="Qin Wu" initials="Q." surname="Wu">
         <organization>Huawei</organization>
      </author>
      <date day="27" month="September" year="2024"/>
      <abstract>
	 <t>   This memo provides guidelines for authors and reviewers of
   specifications containing YANG modules, including IANA-maintained
   modules.  Recommendations and procedures are defined, which are
   intended to increase interoperability and usability of Network
   Configuration Protocol (NETCONF) and RESTCONF protocol
   implementations that utilize YANG modules.  This document obsoletes
   RFC 8407.

   Also, this document updates RFC 8126 by providing additional
   guidelines for writing the IANA considerations for RFCs that specify
   IANA-maintained modules.  The document also updates RFC 6020 by
   clarifying how modules and their revisions are handled by IANA.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-netmod-rfc8407bis-17"/>
   
</reference>




    </references>

</references>


<?line 1110?>

<section anchor="wheredropped"><name>Where do packets get dropped?</name>
<t><xref target="ex-drop"/> depicts an example of where and why packets may be discarded in a typical single-ASIC, shared-buffered type device. Packets ingress on the left and egress on the right.</t>

<figure title="Example of where packets get dropped" anchor="ex-drop"><artwork><![CDATA[
                                                      +----------+
                                                      |          |
                                                      |  CPU     |
                                                      |          |
                                                      +--+---^---+
                                                from_cpu |   | to_cpu
                                                         |   |
                          +------------------------------v---+-------------------------------+
                          |                                                                  |

            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+
            |          |  |          |  |          |  |          |  |          |  |          |  |          |
 Packet rx ->  Phy     +-->  Mac     +--> Ingress  +--> Buffers  +--> Egresss  +-->  Mac     +-->  Phy     |>  Packet tx
            |          |  |          |  |  Pipeline|  |          |  |  Pipeline|  |          |  |          |
            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+

  Intended                               policy/acl                  policy/acl
  Discards:                              policy/policer              policy/policer
                                         policy/urpf
                                         policy/null-route

Unintended                 error/rx/l2   error/l3/rx   no-buffer     error/l3/tx
  Discards:                              error/local
                                         error/l3/no-route
                                         error/l3/rx/ttl-expired

]]></artwork></figure>

<section anchor="discard-class-descriptions"><name>Discard Class Descriptions</name>

<dl>
  <dt>discards/policy/:</dt>
  <dd>
    <t>These are intended discards, meaning packets dropped by a device due to a configured policy. There are multiple sub-classes.</t>
  </dd>
  <dt>discards/error/l2/rx/:</dt>
  <dd>
    <t>Frames discarded due to errors in the received L2 frame. There are multiple sub-classes, such as those resulting from failing CRC, invalid header, invalid MAC address, or invalid VLAN.</t>
  </dd>
  <dt>discards/error/l3/rx/:</dt>
  <dd>
    <t>These are discards which occur due to errors in the received packet, indicating an upstream problem rather than an issue with the device dropping the errored packets. There are multiple sub-classes, including header checksum errors, MTU exceeded, and invalid packet, i.e. due to incorrect version, incorrect header length, or invalid options.</t>
  </dd>
  <dt>discards/error/l3/rx/ttl-expired:</dt>
  <dd>
    <t>There can be multiple causes for TTL-expired (or Hop limit exceeded) discards: i) trace-route; ii) TTL (Hop limit) set too low by the end-system; iii) routing loops.</t>
  </dd>
  <dt>discards/error/l3/no-route/:</dt>
  <dd>
    <t>Discards occur due to a packet not matching any route.</t>
  </dd>
  <dt>discards/error/local/:</dt>
  <dd>
    <t>A device may discard packets within its switching pipeline due to internal errors, such as parity errors. Any errored discards not explicitly assigned to the above classes are also accounted for here.</t>
  </dd>
  <dt>discards/no-buffer/:</dt>
  <dd>
    <t>Discards occur due to no available buffer to enqueue the packet. These can be tail-drop discards or due to an active queue management algorithm, such as RED <xref target="RED93"/> or CODEL <xref target="RFC8289"/>.</t>
  </dd>
</dl>

</section>
</section>
<section anchor="implementation-experience"><name>Implementation Experience</name>
<t>This appendix captures the authors' experience gained from implementing and applying this information model across multiple vendors' platforms, as guidance for future implementers.</t>

<t><list style="numbers" type="1">
  <t>The number and granularity of classes described in Section 3 represent a compromise.  It aims to offer sufficient detail to enable appropriate automated actions while avoiding excessive detail, which may hinder quick problem identification.  Additionally, it helps limit the quantity of data produced per interface, thus constraining the data volume and device CPU impacts.  Although further granularity is possible, the scheme described has generally proven to be sufficient for the task of auto-mitigating unintended packet loss.</t>
  <t>There are many possible ways to define the discard classification tree.  For example, we could have used a multi-rooted tree, rooted in each protocol.  Instead, we opted to define a tree where protocol discards and causal discards are accounted for orthogonally.  This decision reduces the number of combinations of classes and has proven sufficient for determining mitigation actions.</t>
  <t>NoBuffer discards can be realized differently with different memory architectures. Whether a NoBuffer discard is attributed to ingress or egress can differ accordingly.  For successful auto-mitigation, discards due to egress interface congestion should be reported on egress, while discards due to device-level congestion (e.g. due to exceeding the device forwarding rate) should be reported on ingress.</t>
  <t>Platforms often account for the number of packets discarded where the TTL has expired (or Hop Limit exceeded), and the device CPU has returned an ICMP Time Exceeded message.  There is typically a policer applied to limit the number of packets sent to the device CPU, however, which implicitly limits the rate of TTL discards that are processed.  One method to account for all packet discards due to TTL expired, even those that are dropped by a policer when being forwarded to the CPU, is to use accounting of all ingress packets received with TTL=1.</t>
  <t>Where no route discards are implemented with a default null route, separate discard accounting is required for any explicit null routes configured, in order to differentiate between interface/ingress/discards/policy/null-route/packets and interface/ingress/discards/errors/no-route/packets.</t>
  <t>It is useful to account separately for transit packets discarded by ACLs or policers, and packets discarded by ACLs or policers which limit the number of packets to the device control plane.</t>
  <t>It is not possible to identify a configuration error - e.g., when intended discards are unintended - with device packet loss metrics alone.  For example, additional context is needed to determine if ACL discards are intended or due to a misconfigured ACL, i.e., with configuration validation before deployment or by detecting a significant change in ACL discards after a configuration change compared to before.</t>
  <t>Where traffic byte counters need to be 64-bit, packet and discard counters that increase at a lower rate may be encoded in fewer bits, e.g., 32-bit.</t>
  <t>Aggregate counters need to be able to deal with the possibility of discontinuities in the underlying counters.</t>
  <t>In cases where the reporting device is the source or destination of a tunnel, the ingress protocol for a packet may differ from the egress protocol; if IPv4 is tunnelled over IPv6 for example.  Some implementations may attribute egress discards to the ingress protocol.</t>
  <t>While the classification tree is seven layers deep, a minimal implementation may only implement the top six layers.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
AxUDrcMCRBqrytRsuTMCjjXkNoovbLRKOkd0dWM2yqnSrFoRNErmbORzfmqh
uNarZlgBWnt22IsaSGR7qbHprkLhn55/JGbh6dMqEDTBdINmKq0FwecKJGYj
4Pqw2CYPAk2Nedtd17xVxdmCQAAEi6qW/Bqnzf2u2jWg8as4PNQVTuEVtCMY
G4DmQdQzJ9m3W/UERlSdrVCLYFxWBd5693IVM+0IZr6ffIFQV5m3knPvqAZ3
2IiZlc1wxyBXS6VVLk7Bb72lhbkwzO46w6wUNSu19cNYsWth+ooxoI8muhe2
QzZTf7+wL6Eh9rZA6z1MrYAX+9RNqijYbotC0iKm9V2X996sZXdsEFa1gmbD
yL0Asqn8u9hDC5cLkTpn7zqzeogK8aNfw12n9HGhWfFEvwtq6wTFJWCTAed1
pB4oXnKzOkLVROTQm1fUmihpCWR6XmEcir0riVkxSv38pTagbxQUKqxkGFMp
Ql0s1mBK7ZitKdSgapAJLnNc9KuCZmpaNEDhHEH9qnBQ7puGcsX3ZLivQ7IV
8OGB138BgP9+PDwVmTddAR2L5UOAp6uINIHJG8t0oasSVM06vLuGDu+WDeHD
KnGl+ztpcTmHdB8al7JJjfqsFn6NNvP7TepcONH8IHCWBq4TWjOsK7Rt+u6e
ov6dgDy5fF+ATo2+QqWUkDykTjVC2KpUCi53m8zvQzc1mku7y8vjOp1XIJpN
J3dNXRUhawQoirkErpvSKnEtdaYyDzy6NdAwp6O7GsxmpccX50/ExdFBC2B0
gv53AI0ulqLBmhN/1ijPrpuN8k+6Kni7fbxXhn1N/GYFUNIaMrvlAr4WFDxG
DQy11G3zd0fKEa3r4NadwhbjvpWOjeJzN8q+38y2ZFHuNvxu4/CG+a1ArCmt
lVFn16u0BOb9a0w/9LGNtXmarTnzMB2vx9OHnnIUF0+apx4zWZhOmlMsuIHk
DlHialLvfi1SOx2vKcD/ssDwQajdRurDr2Of7ijLJfuU3dM+3ZW9JUvhDl8k
KOc+1k1UqJxMfdJHQ/2QK6HrK7SVqUpGx/G1nn/fQKbBmNjhNZDD/eNmR6vJ
vt7c8svJ/jDBTatu/16EbzIsZcrvlilfSSrKpF3pdIijX74K4lBtW12hcW3Z
TXeyYaoRfa14z96UYcmDozZOQpLF5GvBgjfzICjnkgpuW4DOvGyGhV3VjYvi
8fnZ2yc8K9fX+dRAiiWXvhaoBwfxhYUPL/XjjY8rFblNi8/UK6qSa1GL9WgP
56hajUWT4Lpu4H6e6l7DFyPpJpO5TqClq/SuBcVXtlDaMFnJUmDd11Adfi07
VUv5NrKf3YXcXyxU63Vfkanm6MeWgmiZ76pX+MIoPXjt2f/7LSIePeSyoe5s
5QaFwort/VYG9Zhti4C19qy5T6fX4v60tjEaVr1d9BqE8A6A7K4WQwvJ7nqQ
qCnSnaBZc0JgYDEpnnZQ7rL62urg1oHJONF2mOwBuC+hUBkObZyLJZ8UVJF3
BQGIx9eF1EBstiG4sLpJZYepa6j+4QNq/uHvr/iHBUKbK4cf2BBoAyDd5ex/
gR3Q+r+uN7KAfAUzcHgvK5B9PStwZ+qYKONBjcDh/xM2oG5r0lpbiRq2JykI
Ct2WYhx9TuiEroQoHnMN9JB8bii9Gay+x6E5QrKbRGmrs77PyXZpr5DQ9Le9
4gnOwg7CckimdhHiYVmDfEP4ZG7U5J5o9VJ1xnUduABUEyyWv3TVEd/qhdXf
nOVWnr7XbFhYc9OhBZKuD6ViZxN19ZK+KKeyhsr7OPXvLp+B0x0+kXx4enDx
qlDd7kJfC7uvrlxXU4NP3+gLYxvrePBJanPHmL0QzT1tx/fAFi8GH/KVV93S
RdbjWKYdLFOk7gAj+kbxGK+jfUu3FmFXRIZpHvC143QOW5873O0/Qzq9Puod
0CHBXiQzAKOXTPzne1vPRkH6+XO3Y66RNTfiZnK+oHIATpkkvHp5eDqskiXw
Iq+WJHT+kNoEKdUU4hsa6Y61Kd41xpv8JwaT9+dHegPERpRu4MFMfjNZqqJp
2CP9TOci/3pyLM7VCxuKpLtPnz///HnAx8/xdeh0ALJQf0q89YA4tlbd43HR
fT5TPeCbpY4OL36k62oACHh0ujl8aWonMZ6EDe0ARzjNqfU+Q3ZX2hQObCoa
OUf7sbtTHKJINaaJutxO1Z2zTc+QFnjXJLTSTRzKYX+A2koanWrU7kHnMzpT
Dx0sQvInaH7VkdvRkgj1GgZijqjjoQNhjqsqknbICeDZYYoDvvGdr0UJ5aOx
p97YuxL7M8+fzZW92cej2+JiCRzAs8VHkc93Em0/2xIfgEfi0kvnwNKDhJ9f
wOefY7xZbX8oXny3vcuVRt+DrwDQ6Y5lOv08nMsELBj9eIhHvAci8nlge1y8
0xn6H6P4OpTjqa566ZknuvJlWcvoEraYbkk3x3uNCcEKZCMZAXHp7DMVG5tI
OaaSFvTt53NxTlf6dcV5HAE6HzxQb8BnlkBHB/JNkgeqdOSJl/jxb4jzb3jV
FFYbhW46nQ9U1W1sS2VO7T3vrwEHqhCpvq8ogsSlj/BdENixXAR+Vl9EFOG5
ni3NkPXFRMHHUO1KLlrXG14c7XdFOvMAHBUOodKhI1JlR9VJ4tTWYGSFCeWE
I3RZeEyn2Mu1Lr7k70+2/NCfvrALpwbu7Zd3sX/2/r5d3BcKoAWS4398ES1Q
pv/hL3IC5BYMKn75QkAEo9OGx58q1aMKf1c9xqXtrw3H2+af1sagU+jfFbSv
8a0w2G3h48N/6+iD/8mN6L0CLzJbaiRfoQ/x7Ted1eBvb1ShOv7Gk520tp3p
8xY/qyTmzV2wPAsWqhLY3X5zsHT+vjr/YLQjXeCt/U9V3cIFgJbfoD99h99g
rf50Wr7lt/X1WbXLk8Xkzo3scmOnY+vRVd6mnABWNQt3zDcqcwbf7KxbuL+R
AK1JFdUI622tj4EZSe/P/IKmxTptBR+nil2hmy7XuqpU+XZiASx0pUt07NMR
sgM73Usrdzbbv07HVPNSvAGi8f3eKZeTNdzRL3bFXHqRW29XAYHxpK4y7uxp
pqpsdFmtWovHzsu1avH+SFOA18KkSIalARVgb9u3TpV3eR+r9PyqQbulm5HB
bOFbugC5XjHeP9/vlu4Gtd+d8w9Utlc/x2MHNUjtWqQstU2KkzMDVPZ7rY3s
XV1VmtbYI1sIUV0EjhUhuba2R7dcB2kKvZpDLppryEk6MjhTO4rsnubVJAwi
P8xp4ZxJU77JtIu7x82WcY58i9u5uU63Rhjvu02wgrcustN1HqkhQhlNs1mB
3nzncp0clVXPUD+R6mphixlV/uQszeXlsdkt/hi+Y/nZUJWfZVyeOFfcBnQw
1ZdsHl6KAB5AD+KxafaEahllcSxgCqqL5oOS9VKaHWETaJM4xRuB+HXYaBuk
xEjbvaLY6HrPlG+w2zCipdp6Ue0YLaLqcqglA2cBOkGl9V5Ne+k2bPjMHS+U
47VMhGkw3magZUArWnEHsBhGSyNxRgsQZKA8mA2whViLma5vN8X0vRGWCtTl
wVEwvTCNSwWdkbsukrbsbBvVsPIhZ1tBFpSnQR2Mfs1lzrdUqxMkSnuV/ODd
tWy+DRJx4mwtx3KKADP3Mrf15rxwGgM9ZnNLoPPDA6ysfXjwYhembNAL5tWO
udj2853nL6gWYOeoWGD+8GYB82Eq8tQ8FbxUd7HzpRK+t8joMnYiKdcVe4Rk
Vx2JKacLyBKaevYsRGPshquv0/S4WhJN1Vk3enUFg9IAmAdThcYAWZNm4zJY
lKY1Y/ENzNtcTl5tb+B77z0IJViO8KilEgROdY54qmoydphXxaJoSGy6BB3Q
CVKsmnYET4I5XUkR893HOa6JBJxqRI4y60kW6Ar7RYIXfCOx4jktLujyuXzl
hXcV84XGaB9AZq/0rcZdZddRm0Bb0ID9mgf+R2Ol9clvrq+GFd3MdSB4a32A
di9cpMr8IMN+xYprigCUxoSuxrmPdpvW+VWSFjOgOSXoMekWRNrIUxO8mV6V
WFHqjpNVID+glVJZOaz9Np2Zm51dwmNaWlUR5gpu6qJ6ywVMlUxlRGfMl5TD
llRWfyRdSuvSJJmX0j3USFxTdhmgrS+PTLd2OI4J7ZoGB+u3E1dVlte9Wp5k
xRCarq8HRPECFpUQAVZRrZkQ4b+SlKkFwSE5BqsbU1IRWnWF+gKyJvEqbNyk
FftxiIIFxAY3RV2BV2LDpYDxqLUO6VQbazSQF+iCPPdZUi5Wj+Xw4ilLR18V
pBtLn0vFgSXNfZ3Yd84jz0eqcm3qKg0OiIxS7CkxZozJzDmLTaUUdkoXk5zG
b0ql/pVJhDAkDH4js055oQhNOUUe5gGElPM4AQOfgBPBLW5oj+hmAxI3r9I5
5X8Ll6uYtJJZ4MbheQSiGm3pIzK9LVxnXxQ0DDIMAjrw4v7sQpC9Dl2kMxIR
9zoDU79d34BT7o91TG3fcfqiy9btgTEMLYyaslpO7N5ErPD9pGF4RQu6huVM
m1lgNqhP4f6MomRUd4uZC2gogEHpKIdBx8UwqGtKVzp2BNslEliKTgSL9Oyf
nInLYI4VW9XZRQjpU/CEJMI4JHBXJRjR65v9ZOhrAma3NYBVBMjGF2+PADic
GyLYCKN7UYEF9caaQpXToTPE2DCO6q97rKgoNnIMoL6L6P6GWUwAle8lKS7q
Gd5jt4qIXSHJENKEw4xQmExpxPGMAjBZFchSty0pDAm1gOwcFvRUcAR8pYdH
9xnVl2hgHQSA/rxN1+BwslmfCyyaHeuKVTOc6E08MIbOLl4IXSSuTtjGLjRq
OYbEh8s1LU1s53SSOjNGjPf5hhJSG20tyPeOZHYtZdR2/UIl22AuJuCZR2ND
VYrbhNd6BoS38ECwAJgApdF0OHzXqIdcH4rOR5jjEa5SAWOH+8d8zw6zN2W1
WetVfWdQi/i33JtCd/IwBhhaG0eJ9pMjj6UzZWcbz1s4egKNU5clsZITIBlx
HHRP2XcGwb3NABQmCXy8dyeOKh63evcZQco2ggwneyGQxwlSpiSjenQn4AZn
lToZCGijr4IiAIuY0vSRP44kMJFubAjjJQXofEMVQuBz7Eu3RFAEAb+qQvIg
rkWwJhm5r+I46mWMQb2EMePx6O4hVkO9W6pQ8o5IoSInrk7Zdfc4VTaTkFGh
y0Ko6BYGvjDjxNPRqEFqYQdC/Fgt60wk/gjdgkQyu7kUH10zNLSXHdWA4ykx
GoOzt2kFFrBAl28aEzOAfDmwWZpUhnOFk9lXwncMAa08utjLOCJnowYLV8Bm
WxUxplDFluZHCyiyPIpk2FWbGpQt1AEXX9mhiMiTXIoYzOVBstjgJYoeFbXD
gannEEUO/ApXn5tYgQbxvojnsnQHGK+omeDF3PVifE1cCynfjfSBAgqq+FwN
YBGklHyKulJsLOWiS0oQBXO8aK44V0Q46C4q85wDcPDrKcwLuROYeP1fjTCi
j7mwAAA=

-->

</rfc>

