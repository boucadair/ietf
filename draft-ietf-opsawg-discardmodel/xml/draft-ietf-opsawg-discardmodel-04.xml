<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.31 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-opsawg-discardmodel-04" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="IM for Packet Discard Reporting">An Information Model for Packet Discard Reporting</title>

    <author initials="J." surname="Evans" fullname="John Evans">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>1 Principal Place, Worship Street</street>
          <city>London</city>
          <code>EC2A 2FA</code>
          <country>UK</country>
        </postal>
        <email>jevanamz@amazon.co.uk</email>
      </address>
    </author>
    <author initials="O." surname="Pylypenko" fullname="Oleksandr Pylypenko">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>410 Terry Ave N</street>
          <city>Seattle</city>
          <region>WA</region>
          <code>98109</code>
          <country>US</country>
        </postal>
        <email>opyl@amazon.com</email>
      </address>
    </author>
    <author initials="J." surname="Haas" fullname="Jeffrey Haas">
      <organization>Juniper Networks</organization>
      <address>
        <postal>
          <street>1133 Innovation Way</street>
          <city>Sunnyvale</city>
          <region>CA</region>
          <code>94089</code>
          <country>US</country>
        </postal>
        <email>jhaas@juniper.net</email>
      </address>
    </author>
    <author initials="A." surname="Kadosh" fullname="Aviran Kadosh">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>170 West Tasman Dr.</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>US</country>
        </postal>
        <email>akadosh@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair">
      <organization>Orange</organization>
      <address>
        <postal>
          <country>France</country>
        </postal>
        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <date year="2024" month="September" day="19"/>

    <area>Operations and Management Area</area>
    <workgroup>OPSAWG</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>The primary function of a network is to transport packets and deliver them according to service level objectives.  Understanding both where and why packet loss occurs within a network is essential for effective network operation.  Device-reported packet loss provides the most direct signal for network operations to identify the customer impact resulting from unintended packet loss.  This document defines an information model for packet loss reporting, which classifies these signals to enable automated network mitigation of unintended packet loss.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>In automating network operations, a network operator needs to be able to detect anomalous packet loss, diagnose or determine the root cause of the loss, and then apply one of a set of possible actions to mitigate customer-impacting packet loss.  Some packet loss is normal or intended in IP/MPLS networks, however. Hence, precise classification of packet loss signals is crucial both to ensure that anomalous packet loss is easily detected and that the right action or sequence of actions is taken to mitigate the impact, as taking the wrong action can make problems worse.</t>

<t>The existing metrics for reporting packet loss, as defined in <xref target="RFC1213"/> (namely ifInDiscards, ifOutDiscards, ifInErrors, and ifOutErrors), do not provide sufficient precision to automatically identify the cause of the loss and mitigate the impact.  From a network operator's perspective, ifInDiscards can represent both intended packet loss (e.g., packets discarded due to policy) and unintended packet loss (e.g., packets dropped in error). Furthermore, these definitions are ambiguous, as vendors can and have implemented them differently.  In some implementations, ifInErrors accounts only for errored packets that are dropped, while in others, it accounts for all errored packets, whether they are dropped or not.  Many implementations support more discard metrics than these; where they do, they have been inconsistently implemented due to the lack of a standardised classification scheme and clear semantics for packet loss reporting. <xref target="RFC7270"/> provides support for reporting discards per flow in IPFIX using forwardingStatus, however, the defined drop reason codes also lack sufficient clarity (e.g., "For us" Reason Code) to support automated root cause analysis and impact mitigation.</t>

<t>Hence, this document defines an information model for packet loss reporting, aiming to address these issues by presenting a packet loss classification scheme that can enable automated mitigation of unintended packet loss.  In line with <xref target="RFC3444"/>, this information model remains independent of specific implementations or transport protocols.</t>

<t>The specific implementations of this information model (i.e., protocols and associated data models) are outside the scope of this document.  The scope of this document is limited to reporting packet loss at Layer 3 and frames discarded at Layer 2, although the information model might be extended in future to cover segments dropped at Layer 4. This document considers only the signals that may trigger automated mitigation plans and not how they are defined or executed.</t>

<t><xref target="problem"/> describes the problem to be solved. Section 4 describes the information model and requirements with a set of examples.  Section 5 provides examples of discard signal-to-cause-to-auto-mitigation action mapping.  Section 6 presents the information model as an abstract data structure in YANG, in accordance with <xref target="RFC8791"/>.  Appendix A provides an example of where packets may be discarded in a device.  Appendix B details the authors' experience from implementing this model.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>A packet discard is considered to be any packet dropped by a device, which may be intentional (i.e. due to a configured policy, e.g. such as an Access Control List (ACL)) or unintentional (i.e. packets dropped in error).</t>

<t>The meanings of the symbols in the YANG tree diagrams are defined in <xref target="RFC8340"/>.</t>

<t>Symbol "|" is used to denote "or".</t>

</section>
<section anchor="problem"><name>Problem Statement</name>
<t>At the highest-level, unintended packet loss is the discarding of packets that the network operator otherwise intends to deliver, i.e. which indicates an error state.  There are many possible reasons for unintended packet loss, including: erroring links may corrupt packets in transit; incorrect routing tables may result in packets being dropped because they do not match a valid route; configuration errors may result in a valid packet incorrectly matching an Access Control List (ACL) and being dropped.  While the specific definition of unintended packet loss is network-dependent, for any network there are a small set of potential actions that can be taken to minimise customer impact by automatically mitigating unintended packet loss:</t>

<t><list style="numbers">
  <t>Take a device, link, or set of devices and/or links out of service.</t>
  <t>Return a device, link, or set of devices and/or links back into service.</t>
  <t>Move traffic to other links or devices.</t>
  <t>Roll back a recent change to a device that might have caused the problem.</t>
  <t>Escalate to a network operator as a last resort.</t>
</list></t>

<t>A precise signal of impact is crucial, as taking the wrong action can be worse than taking no action. For example, taking a congested device out of service can make congestion worse by moving the traffic to other links or devices, which are already congested.</t>

<t>To detect whether device-reported discards indicate a problem and to determine what actions should be taken to mitigate the impact and remediate the cause, depends on four primary features of the packet loss signal:</t>

<dl>
  <dt>FEATURE-LOSS-CAUSE:</dt>
  <dd>
    <t>The cause of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-RATE:</dt>
  <dd>
    <t>The rate and/or degree of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-DURATION:</dt>
  <dd>
    <t>The duration of the loss.</t>
  </dd>
  <dt>FEATURE-LOSS-LOCATION:</dt>
  <dd>
    <t>The location of the loss.</t>
  </dd>
</dl>

<t>FEATURE-LOSS-RATE, FEATURE-LOSS-DURATION, and FEATURE-LOSS-LOCATION are already addressed with passive monitoring statistics, for example, obtained with SNMP <xref target="RFC1157"/> / MIB-II <xref target="RFC1213"/> or NETCONF <xref target="RFC6241"/>. FEATURE-LOSS-CAUSE, however, is dependent on the classification scheme used for packet loss reporting. The next section defines a new classification scheme to address this problem.</t>

</section>
<section anchor="model"><name>Information Model</name>

<section anchor="rationale"><name>Design Rationale</name>

<t>This document uses YANG to represent the information model for three main reasons. First, YANG, along with its data structure extensions <xref target="RFC8791"/>, allows designers to define the model in an abstract way, decoupled from specific implementations. This abstraction ensures consistency and provides flexibility for diverse potential implementations, with the structure and groupings easily adaptable to data models such as those specific to SNMP <xref target="RFC1157"/>, NETCONF <xref target="RFC6241"/>, RESTCONF <xref target="RFC8040"/>, or IPFIX <xref target="RFC7011"/>.  Second, this approach ensures a lossless translation from the information model to a YANG data model, preserving both semantics and structure. Lastly, YANG capitalises on the communityâs broad familiarity with its syntax and use, facilitating easier adoption and evolution.</t>

</section>
<section anchor="structure"><name>Structure</name>

<t>The classification scheme is defined as a tree that follows the structure: component/direction/type/layer/sub-type/sub-sub-type/.../metric, where:</t>

<t>a. Component can be interface|device|control-plane|flow<br />
b. Direction can be ingress|egress<br />
c. Type can be traffic|discards, where traffic accounts for packets successfully received or transmitted, and discards accounts for packet drops<br />
d. Layer can be l2|l3</t>

<figure><artwork><![CDATA[
  structure packet-discard-reporting:
    +-- interface* [name]
       +-- name             string
       +-- ingress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stats* [address-family]
       |  |  |     +-- address-family    iana-rt-types:address-family
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stats* [address-family]
       |     |     +-- address-family    iana-rt-types:address-family
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- rx
       |     |  |     +-- frames?          uint32
       |     |  |     +-- crc-error?       uint32
       |     |  |     +-- invalid-mac?     uint32
       |     |  |     +-- invalid-vlan?    uint32
       |     |  |     +-- invalid-frame?   uint32
       |     |  +-- l3
       |     |  |  +-- rx
       |     |  |  |  +-- packets?          uint32
       |     |  |  |  +-- checksum-error?   uint32
       |     |  |  |  +-- mtu-exceeded?     uint32
       |     |  |  |  +-- invalid-packet?   uint32
       |     |  |  |  +-- ttl-expired?      uint32
       |     |  |  +-- no-route?        uint32
       |     |  |  +-- invalid-sid?     uint32
       |     |  |  +-- invalid-label?   uint32
       |     |  +-- hardware
       |     |     +-- packets?        uint32
       |     |     +-- parity-error?   uint32
       |     +-- policy
       |     |  +-- l2
       |     |  |  +-- frames?   uint32
       |     |  |  +-- acl?      uint32
       |     |  +-- l3
       |     |     +-- packets?      uint32
       |     |     +-- acl?          uint32
       |     |     +-- policer
       |     |     |  +-- packets?   uint32
       |     |     |  +-- bytes?     uint32
       |     |     +-- null-route?   uint32
       |     |     +-- rpf?          uint32
       |     |     +-- ddos?         uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- egress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- address-family-stats* [address-family]
       |  |  |     +-- address-family    iana-rt-types:address-family
       |  |  |     +-- packets?          uint64
       |  |  |     +-- bytes?            uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- address-family-stats* [address-family]
       |     |     +-- address-family    iana-rt-types:address-family
       |     |     +-- packets?          uint64
       |     |     +-- bytes?            uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- tx
       |     |  |     +-- frames?   uint32
       |     |  +-- l3
       |     |     +-- tx
       |     |        +-- packets?   uint32
       |     +-- policy
       |     |  +-- l3
       |     |     +-- acl?       uint32
       |     |     +-- policer
       |     |        +-- packets?   uint32
       |     |        +-- bytes?     uint32
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- control-plane
          +-- ingress
             +-- traffic
             |  +-- packets?   uint32
             |  +-- bytes?     uint32
             +-- discards
                +-- packets?   uint32
                +-- bytes?     uint32
                +-- policy
                   +-- packets?   uint32

]]></artwork></figure>

<t>For additional context, Appendix A provides an example of where packets may be discarded in a device.</t>

</section>
<section anchor="requirements"><name>Requirements</name>
<t>Requirements 1-10 relate to packets forwarded by the device, while requirement 11 relates to packets destined for or originating from the device:</t>

<t><list style="numbers">
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>MUST</bcp14> be reported.</t>
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>SHOULD</bcp14> be attributed to the physical or logical interface of the device where they occur.</t>
  <t>An individual frame <bcp14>MUST</bcp14> only be accounted for by either the Layer 2 traffic class or the Layer 2 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>An individual packet <bcp14>MUST</bcp14> only be accounted for by either the Layer 3 traffic class or the Layer 3 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>A frame accounted for at Layer 2 <bcp14>SHOULD NOT</bcp14> be accounted for at Layer 3 and vice versa.  An implementation <bcp14>MUST</bcp14> indicate which layers a discard is counted against.</t>
  <t>The aggregate Layer 2 and Layer 3 traffic and discard classes <bcp14>SHOULD</bcp14> account for all underlying packets received, transmitted, and discarded across all other classes.</t>
  <t>The aggregate Quality of Service (QoS) traffic and no buffer discard classes <bcp14>MUST</bcp14> account for all underlying packets received, transmitted, and discarded across all other classes.</t>
  <t>In addition to the Layer 2 and Layer 3 aggregate classes, an individual discarded packet <bcp14>MUST</bcp14> only account against a single error, policy, or no_buffer discard subclass.</t>
  <t>When there are multiple reasons for discarding a packet, the ordering of discard class reporting <bcp14>MUST</bcp14> be defined.</t>
  <t>If Diffserv <xref target="RFC2475"/> is not used, no_buffer discards <bcp14>SHOULD</bcp14> be reported as class0.</t>
  <t>Traffic to the device control plane has its own class, however, traffic from the device control plane <bcp14>SHOULD</bcp14> be accounted for in the same way as other egress traffic.</t>
</list></t>

</section>
<section anchor="examples"><name>Examples</name>

<t>Assuming all the requirements are met, a "good" unicast IPv4 packet received would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/traffic/l3/v4/unicast/packets</t>
  <t>interface/ingress/traffic/l3/v4/unicast/bytes</t>
  <t>interface/ingress/traffic/qos/class_0/packets</t>
  <t>interface/ingress/traffic/qos/class_0/bytes</t>
</list></t>

<t>A received unicast IPv6 packet discarded due to Hop Limit expiry would increment:</t>

<t><list style="symbols">
  <t>interface/ingress/discards/l3/v6/unicast/packets</t>
  <t>interface/ingress/discards/l3/v6/unicast/bytes</t>
  <t>interface/ingress/discards/l3/rx/ttl_expired/packets</t>
</list></t>

<t>An IPv4 packet discarded on egress due to no buffers would increment:</t>

<t><list style="symbols">
  <t>interface/egress/discards/l3/v4/unicast/packets</t>
  <t>interface/egress/discards/l3/v4/unicast/bytes</t>
  <t>interface/egress/discards/no_buffer/class_0/packets</t>
  <t>interface/egress/discards/no_buffer/class_0/bytes</t>
</list></t>

</section>
</section>
<section anchor="mapping"><name>Example Signal-Cause-Mitigation Mapping</name>
<t><xref target="ex-table"/> gives an example discard signal-to-cause-to-mitigation action mapping.  Mappings for a specific network will be dependent on the definition of unintended packet loss for that network.</t>

<figure title="Example Signal-Cause-Mitigation Mapping" anchor="ex-table"><artwork><![CDATA[
+-------------------------------------------+---------------------+------------+----------+-------------+-----------------------+
| Discard class                             | Cause               | Discard    | Discard  | Unintended? | Possible actions      |
|                                           |                     | rate       | duration |             |                       |
+-------------------------------------------+---------------------+------------+----------+-------------+-----------------------+
| ingress/discards/errors/l2/rx             | Upstream device     | >Baseline  | O(1min)  | Y           | Take upstream link or |
|                                           | or link error       |            |          |             | device out-of-service |
| ingress/discards/errors/l3/rx/ttl_expired | Tracert             | <=Baseline |          | N           | no action             |
| ingress/discards/errors/l3/rx/ttl_expired | Convergence         | >Baseline  | O(1s)    | Y           | no action             |
| ingress/discards/errors/l3/rx/ttl_expired | Routing loop        | >Baseline  | O(1min)  | Y           | Roll-back change      |
| .*/policy/.*                              | Policy              |            |          | N           | no action             |
| ingress/discards/errors/l3/no_route       | Convergence         | >Baseline  | O(1s)    | Y           | no action             |
| ingress/discards/errors/l3/no_route       | Config error        | >Baseline  | O(1min)  | Y           | Roll-back change      |
| ingress/discards/errors/l3/no_route       | Invalid destination | >Baseline  | O(10min) | N           | Escalate to operator  |
| ingress/discards/errors/local             | Device errors       | >Baseline  | O(1min)  | Y           | Take device           |
|                                           |                     |            |          |             | out-of-service        |
| egress/discards/no_buffer                 | Congestion          | <=Baseline |          | N           | no action             |
| egress/discards/no_buffer                 | Congestion          | >Baseline  | O(1min)  | Y           | Bring capacity back   |
|                                           |                     |            |          |             | into service or move  |
|                                           |                     |            |          |             | traffic               |
+-------------------------------------------+---------------------+------------+----------+-------------+-----------------------+

]]></artwork></figure>

<t>The 'Baseline' in the 'Discard Rate' column is both discard class and network dependent.</t>

</section>
<section anchor="module"><name>YANG Module</name>

<t>The "ietf-packet-discard-reporting" uses the "sx" structure defined in <xref target="RFC8791"/>.</t>

<figure><artwork><![CDATA[
  <CODE BEGINS>
module ietf-packet-discard-reporting {
  yang-version 1.1;
  namespace
    "urn:ietf:params:xml:ns:yang:ietf-packet-discard-reporting";
  prefix plr;

  import iana-routing-types {
    prefix "iana-rt-types";
    reference
      "RFC 8294: Common YANG Data Types for the Routing Area";
  }

  import ietf-yang-structure-ext {
    prefix sx;
    reference
      "RFC 8791: YANG Data Structure Extensions";
  }

  organization
    "IETF OPSAWG (Operations and Management Area Working Group)";
  contact
    "WG Web:   https://datatracker.ietf.org/wg/opsawg/
     WG List:  mailto:opsawg@ietf.org

     Author:   John Evans
               <mailto:jevanamz@amazon.co.uk>

     Author:   Oleksandr Pylypenko
               <mailto:opyl@amazon.com>

     Author:   Jeffrey Haas
               <mailto:jhaas@juniper.net>

     Author:   Aviran Kadosh
               <mailto:akadosh@cisco.com>

     Author:   Mohamed Boucadair
               <mailto:mohamed.boucadair@orange.com>";
  description
    "This module defines an information model for packet discard
     reporting.

     Copyright (c) 2024 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see the
     RFC itself for full legal notices.";

  revision 2024-06-04 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: An Information Model for Packet Discard Reporting";
  }

  /*
   * Groupings
   */

  grouping basic-packets-64 {
    description
      "Basic grouping with 64-bit packets";
    leaf packets {
      type uint64;
      description
        "Number of L3 packets";
    }
  }

  grouping basic-packets-bytes-64 {
    description
      "Basic grouping with 64-bit packets and bytes";
    uses basic-packets-64;
    leaf bytes {
      type uint64;
      description
        "Number of L3 bytes";
    }
  }

  grouping basic-frames-64 {
    description
      "Basic grouping with 64-bit frames";
    leaf frames {
      type uint64;
      description
        "Number of L2 frames";
    }
  }

  grouping basic-frames-bytes-64 {
    description
      "Basic grouping with 64-bit packets and bytes";
    uses basic-frames-64;
    leaf bytes {
      type uint64;
      description
        "Number of L2 bytes";
    }
  }

  grouping basic-packets-32 {
    description
      "Basic grouping with 32-bit packets";
    leaf packets {
      type uint32;
      description
        "Number of L3 packets";
    }
  }

  grouping basic-packets-bytes-32 {
    description
      "Basic grouping with 32-bit packets and bytes";
    uses basic-packets-32;
    leaf bytes {
      type uint32;
      description
        "Number of L3 bytes";
    }
  }

  grouping basic-frames-32 {
    description
      "Basic grouping with 32-bit frames";
    leaf frames {
      type uint32;
      description
        "Number of L2 frames";
    }
  }

  grouping basic-frames-bytes-32 {
    description
      "Basic grouping with 32-bit packets and bytes";
    uses basic-frames-32;
    leaf bytes {
      type uint32;
      description
        "Number of L2 bytes";
    }
  }

  grouping l2-traffic {
    description
      "Layer 2 traffic counters";
    uses basic-frames-bytes-64;
  }

  grouping ip {
    description
      "Traffic counters";
    list address-family-stats {
      key "address-family";
      description
        "Per address family traffic counters";
      leaf address-family {
        type iana-rt-types:address-family;
        description
          "Address-family";
      }
      uses basic-packets-bytes-64;
      container unicast {
        description
          "Unicast traffic counters";
        uses basic-packets-bytes-64;
      }
      container multicast {
        description
          "Multicast traffic counters";
        uses basic-packets-bytes-64;
      }
    }
  }

  grouping l3-traffic {
    description
      "Layer 3 traffic counters";
      uses ip;
  }

  grouping qos {
    description
      "Quality of Service (QoS) traffic counters";
    list class {
      key "id";
      min-elements 1;
      description
        "QoS class traffic counters";
      leaf id {
        type string;
        description
          "QoS class identifier";
      }
      uses basic-packets-bytes-64;
    }
  }

  grouping traffic {
    description
      "Traffic counters";
    container l2 {
      description
        "Layer 2 traffic counters";
      uses l2-traffic;
    }
    container l3 {
      description
        "Layer 3 traffic counters";
      uses l3-traffic;
    }
    container qos {
      description
        "Quality of Service (QoS) traffic counters";
      uses qos;
    }
  }

  grouping control-plane {
    description
      "Control plane packet counters";
    container ingress {
      description
        "Control plane ingress counters";
      container traffic {
        description
          "Control plane ingress traffic counters";
        uses basic-packets-bytes-32;
      }
      container discards {
        description
          "Control plane ingress packet discard counters";
        uses basic-packets-bytes-32;
        container policy {
          description
            "Number of control plane packets discarded due to policy";
          uses basic-packets-32;
        }
      }
    }
  }

  grouping errors-l2-rx {
    description
      "Layer 2 ingress frame errors";
    container rx {
      description
        "Layer 2 ingress frame error counters";
      leaf frames {
        type uint32;
        description
          "Number of errored L2 frames";
      }
      leaf crc-error {
        type uint32;
        description
          "Number of frames received with CRC error";
      }
      leaf invalid-mac {
        type uint32;
        description
          "Number of frames received with invalid MAC address";
      }
      leaf invalid-vlan {
        type uint32;
        description
          "Number of frames received with invalid VLAN tag";
      }
      leaf invalid-frame {
        type uint32;
        description
          "Number of invalid frames received";
      }
    }
  }

  grouping errors-l3-rx {
    description
      "Layer 3 ingress packet error counters";
    container rx {
      description
        "Layer 3 ingress packet receive error counters";
      leaf packets {
        type uint32;
        description
          "Number of errored L3 packets";
      }
      leaf checksum-error {
        type uint32;
        description
          "Number of packets received with checksum error";
      }
      leaf mtu-exceeded {
        type uint32;
        description
          "Number of packets received exceeding MTU";
      }
      leaf invalid-packet {
        type uint32;
        description
          "Number of invalid packets received";
      }
      leaf ttl-expired {
        type uint32;
        description
          "Number of packets received with expired TTL";
      }
    }
    leaf no-route {
      type uint32;
      description
        "Number of packets with no route";
    }
    leaf invalid-sid {
      type uint32;
      description
        "Number of packets with invalid SID";
    }
    leaf invalid-label {
      type uint32;
      description
        "Number of packets with invalid label";
    }
  }

  grouping errors-l3-hw {
    description
      "Hardware error counters";
    leaf packets {
      type uint32;
      description
        "Number of local errored packets";
    }
    leaf parity-error {
      type uint32;
      description
        "Number of packets with parity error";
    }
  }

  grouping errors-rx {
    description
      "Ingress error counters";
    container l2 {
      description
        "Layer 2 received frame error counters";
      uses errors-l2-rx;
    }
    container l3 {
      description
        "Layer 3 received packet error counters";
      uses errors-l3-rx;
    }
    container hardware {
      description
        "Hardware error counters";
      uses errors-l3-hw;
    }
  }

  grouping errors-l2-tx {
    description
      "Layer 2 transmit error counters";
    container tx {
      description
        "Layer 2 transmit frame error counters";
      leaf frames {
        type uint32;
        description
          "Number of errored L2 frames during transmission";
      }
    }
  }

  grouping errors-l3-tx {
    description
      "Layer 3 transmit error counters";
    container tx {
      description
        "Layer 3 transmit packet error counters";
      leaf packets {
        type uint32;
        description
          "Number of errored L3 packets during transmission";
      }
    }
  }

  grouping errors-tx {
    description
      "Egress error counters";
    container l2 {
      description
        "Layer 2 transmit frame error counters";
      uses errors-l2-tx;
    }
    container l3 {
      description
        "Layer 3 transmit packet error counters";
      uses errors-l3-tx;
    }
  }

  grouping policy-l2-rx {
    description
      "Layer 2 policy ingress packet discard counters";
    leaf frames {
      type uint32;
      description
        "Number of L2 frames discarded due to policy";
    }
    leaf acl {
      type uint32;
      description
        "Number of frames discarded due to L2 ACL";
    }
  }

  grouping policy-l3-rx {
    description
      "Layer 3 policy ingress packet discard counters";
    leaf packets {
      type uint32;
      description
        "Number of L3 packets discarded due to policy";
    }
    leaf acl {
      type uint32;
      description
        "Number of packets discarded due to L3 ACL";
    }
    container policer {
      description
        "Policer ingress packet discard counters";
      uses basic-packets-bytes-32;
    }
    leaf null-route {
      type uint32;
      description
        "Number of packets discarded due to null route";
    }
    leaf rpf {
      type uint32;
      description
        "Number of packets discarded due to RPF check failure";
    }
    leaf ddos {
      type uint32;
      description
        "Number of packets discarded due to DDoS protection";
    }
  }

  grouping policy-rx {
    description
      "Policy-related ingress packet discard counters";
    container l2 {
      description
        "Layer 2 policy ingress packet discard counters";
      uses policy-l2-rx;
    }
    container l3 {
      description
        "Layer 3 policy ingress packet discard counters";
      uses policy-l3-rx;
    }
  }

  grouping policy-l3-tx {
    description
      "Layer 3 policy egress packet discard counters";
    leaf acl {
      type uint32;
      description
        "Number of packets discarded due to L3 egress ACL";
    }
    container policer {
      description
        "Policer egress packet discard counters";
      uses basic-packets-bytes-32;
    }
  }

  grouping policy-tx {
    description
      "Policy-related egress packet discard counters";
    container l3 {
      description
        "Layer 3 policy egress packet discard counters";
      uses policy-l3-tx;
    }
  }

  grouping interface {
    description
      "Interface-level packet loss counters";
    container ingress {
      description
        "Ingress counters";
      container traffic {
        description
          "Ingress traffic counters";
        uses traffic;
      }
      container discards {
        description
          "Ingress packet discard counters";
        container l2 {
          description
            "Layer 2 ingress discards traffic counters";
          uses l2-traffic;
        }
        container l3 {
          description
            "Layer 3 ingress discards traffic counters";
          uses l3-traffic;
        }
        container errors {
          description
            "Ingress packet error counters";
          uses errors-rx;
        }
        container policy {
          description
            "Policy-related ingress packet discard counters";
          uses policy-rx;
        }
        container no-buffer {
          description
            "Ingress packet discard counters due to buffer unavailability";
          uses qos;
        }
      }
    }
    container egress {
      description
        "Egress counters";
      container traffic {
        description
          "Egress traffic counters";
        uses traffic;
      }
      container discards {
        description
          "Egress packet discard counters";
        container l2 {
          description
            "Layer 2 egress packet discard counters";
          uses l2-traffic;
        }
        container l3 {
          description
            "Layer 3 egress packet discard counters";
          uses l3-traffic;
        }
        container errors {
          description
            "Egress packet error counters";
          uses errors-tx;
        }
        container policy {
          description
            "Policy-related egress packet discard counters";
          uses policy-tx;
        }
        container no-buffer {
          description
            "Egress packet discard counters due to buffer unavailability";
          uses qos;
        }
      }
    }
    container control-plane {
      description
        "Control plane packet counters";
      uses control-plane;
    }
  }

  /*
   * Main Structure
   */
  sx:structure packet-discard-reporting {
    description
      "Container for packet discard reporting data.";
    list interface {
      key "name";
      description
        "List of interfaces for which packet discard reporting
         data is provided.";
      leaf name {
        type string;
        description
          "Name of the interface.";
      }
      uses interface;
    }
  }
}
<CODE ENDS>
]]></artwork></figure>

</section>
<section anchor="security"><name>Security Considerations</name>

<t>The document defines a YANG module using <xref target="RFC8791"/>. As such, this document does
not define data nodes. Following  the guidance in <xref section="3.7" sectionFormat="of" target="I-D.ietf-netmod-rfc8407bis"/>,
the YANG security template is not used.</t>

</section>
<section anchor="iana"><name>IANA Considerations</name>

<t>IANA is requested to register the following URI in the "ns" subregistry within
   the "IETF XML Registry" <xref target="RFC3688"/>:</t>

<figure><artwork><![CDATA[
   URI:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Registrant Contact:  The IESG.
   XML:  N/A; the requested URI is an XML namespace.
]]></artwork></figure>

<t>IANA is requested to register the following YANG module in the "YANG Module
   Names" subregistry <xref target="RFC6020"/> within the "YANG Parameters" registry:</t>

<figure><artwork><![CDATA[
   Name:  ietf-packet-discard-reporting
   Namespace:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Prefix:  plr
   Maintained by IANA?  N
   Reference:  RFC XXXX
]]></artwork></figure>

</section>
<section anchor="contributors"><name>Contributors</name>

<figure><artwork><![CDATA[
Nadav Chachmon
Cisco Systems, Inc.
170 West Tasman Dr.
San Jose, CA 95134
United States of America
Email: nchachmo@cisco.com
]]></artwork></figure>

</section>
<section anchor="acknowledgements"><name>Acknowledgments</name>
<t>The content of this document has benefitted from feedback from JR Rivers, Ronan Waide, Chris DeBruin, and Marcoz Sanz.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC8791'>
  <front>
    <title>YANG Data Structure Extensions</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. BjÃ¶rklund' initials='M.' surname='BjÃ¶rklund'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <date month='June' year='2020'/>
    <abstract>
      <t>This document describes YANG mechanisms for defining abstract data structures with YANG.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8791'/>
  <seriesInfo name='DOI' value='10.17487/RFC8791'/>
</reference>

<reference anchor='RFC2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC3688'>
  <front>
    <title>The IETF XML Registry</title>
    <author fullname='M. Mealling' initials='M.' surname='Mealling'/>
    <date month='January' year='2004'/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='81'/>
  <seriesInfo name='RFC' value='3688'/>
  <seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>

<reference anchor='RFC6020'>
  <front>
    <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <date month='October' year='2010'/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6020'/>
  <seriesInfo name='DOI' value='10.17487/RFC6020'/>
</reference>




    </references>

    <references title='Informative References'>



<reference anchor='RFC6241'>
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname='R. Enns' initials='R.' role='editor' surname='Enns'/>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'/>
    <author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'/>
    <date month='June' year='2011'/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6241'/>
  <seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>


<reference anchor="RED93" >
  <front>
    <title>Random Early Detection gateways for Congestion Avoidance</title>
    <author initials="V." surname="Jacobson">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


<reference anchor='RFC2475'>
  <front>
    <title>An Architecture for Differentiated Services</title>
    <author fullname='S. Blake' initials='S.' surname='Blake'/>
    <author fullname='D. Black' initials='D.' surname='Black'/>
    <author fullname='M. Carlson' initials='M.' surname='Carlson'/>
    <author fullname='E. Davies' initials='E.' surname='Davies'/>
    <author fullname='Z. Wang' initials='Z.' surname='Wang'/>
    <author fullname='W. Weiss' initials='W.' surname='Weiss'/>
    <date month='December' year='1998'/>
    <abstract>
      <t>This document defines an architecture for implementing scalable service differentiation in the Internet. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2475'/>
  <seriesInfo name='DOI' value='10.17487/RFC2475'/>
</reference>

<reference anchor='RFC8289'>
  <front>
    <title>Controlled Delay Active Queue Management</title>
    <author fullname='K. Nichols' initials='K.' surname='Nichols'/>
    <author fullname='V. Jacobson' initials='V.' surname='Jacobson'/>
    <author fullname='A. McGregor' initials='A.' role='editor' surname='McGregor'/>
    <author fullname='J. Iyengar' initials='J.' role='editor' surname='Iyengar'/>
    <date month='January' year='2018'/>
    <abstract>
      <t>This document describes CoDel (Controlled Delay) -- a general framework that controls bufferbloat-generated excess delay in modern networking environments. CoDel consists of an estimator, a setpoint, and a control loop. It requires no configuration in normal Internet deployments.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8289'/>
  <seriesInfo name='DOI' value='10.17487/RFC8289'/>
</reference>

<reference anchor='RFC1213'>
  <front>
    <title>Management Information Base for Network Management of TCP/IP-based internets: MIB-II</title>
    <author fullname='K. McCloghrie' initials='K.' surname='McCloghrie'/>
    <author fullname='M. Rose' initials='M.' surname='Rose'/>
    <date month='March' year='1991'/>
    <abstract>
      <t>This memo defines the second version of the Management Information Base (MIB-II) for use with network management protocols in TCP/IP-based internets. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='17'/>
  <seriesInfo name='RFC' value='1213'/>
  <seriesInfo name='DOI' value='10.17487/RFC1213'/>
</reference>

<reference anchor='RFC7270'>
  <front>
    <title>Cisco-Specific Information Elements Reused in IP Flow Information Export (IPFIX)</title>
    <author fullname='A. Yourtchenko' initials='A.' surname='Yourtchenko'/>
    <author fullname='P. Aitken' initials='P.' surname='Aitken'/>
    <author fullname='B. Claise' initials='B.' surname='Claise'/>
    <date month='June' year='2014'/>
    <abstract>
      <t>This document describes some additional IP Flow Information Export (IPFIX) Information Elements in the range of 1-127, which is the range compatible with field types used by NetFlow version 9 in RFC 3954, as specified in the IPFIX Information Model in RFC 7012.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7270'/>
  <seriesInfo name='DOI' value='10.17487/RFC7270'/>
</reference>

<reference anchor='RFC3444'>
  <front>
    <title>On the Difference between Information Models and Data Models</title>
    <author fullname='A. Pras' initials='A.' surname='Pras'/>
    <author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'/>
    <date month='January' year='2003'/>
    <abstract>
      <t>There has been ongoing confusion about the differences between Information Models and Data Models for defining managed objects in network management. This document explains the differences between these terms by analyzing how existing network management model specifications (from the IETF and other bodies such as the International Telecommunication Union (ITU) or the Distributed Management Task Force (DMTF)) fit into the universe of Information Models and Data Models. This memo documents the main results of the 8th workshop of the Network Management Research Group (NMRG) of the Internet Research Task Force (IRTF) hosted by the University of Texas at Austin. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='3444'/>
  <seriesInfo name='DOI' value='10.17487/RFC3444'/>
</reference>

<reference anchor='RFC8340'>
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='L. Berger' initials='L.' role='editor' surname='Berger'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='215'/>
  <seriesInfo name='RFC' value='8340'/>
  <seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>

<reference anchor='RFC1157'>
  <front>
    <title>Simple Network Management Protocol (SNMP)</title>
    <author fullname='J.D. Case' initials='J.D.' surname='Case'/>
    <author fullname='M. Fedor' initials='M.' surname='Fedor'/>
    <author fullname='M.L. Schoffstall' initials='M.L.' surname='Schoffstall'/>
    <author fullname='J. Davin' initials='J.' surname='Davin'/>
    <date month='May' year='1990'/>
    <abstract>
      <t>This RFC is a re-release of RFC 1098, with a changed "Status of this Memo" section plus a few minor typographical corrections. This memo defines a simple protocol by which management information for a network element may be inspected or altered by logically remote users. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='1157'/>
  <seriesInfo name='DOI' value='10.17487/RFC1157'/>
</reference>

<reference anchor='RFC8040'>
  <front>
    <title>RESTCONF Protocol</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <date month='January' year='2017'/>
    <abstract>
      <t>This document describes an HTTP-based protocol that provides a programmatic interface for accessing data defined in YANG, using the datastore concepts defined in the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8040'/>
  <seriesInfo name='DOI' value='10.17487/RFC8040'/>
</reference>

<reference anchor='RFC7011'>
  <front>
    <title>Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of Flow Information</title>
    <author fullname='B. Claise' initials='B.' role='editor' surname='Claise'/>
    <author fullname='B. Trammell' initials='B.' role='editor' surname='Trammell'/>
    <author fullname='P. Aitken' initials='P.' surname='Aitken'/>
    <date month='September' year='2013'/>
    <abstract>
      <t>This document specifies the IP Flow Information Export (IPFIX) protocol, which serves as a means for transmitting Traffic Flow information over the network. In order to transmit Traffic Flow information from an Exporting Process to a Collecting Process, a common representation of flow data and a standard means of communicating them are required. This document describes how the IPFIX Data and Template Records are carried over a number of transport protocols from an IPFIX Exporting Process to an IPFIX Collecting Process. This document obsoletes RFC 5101.</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='77'/>
  <seriesInfo name='RFC' value='7011'/>
  <seriesInfo name='DOI' value='10.17487/RFC7011'/>
</reference>


<reference anchor='I-D.ietf-netmod-rfc8407bis'>
   <front>
      <title>Guidelines for Authors and Reviewers of Documents Containing YANG Data Models</title>
      <author fullname='Andy Bierman' initials='A.' surname='Bierman'>
         <organization>YumaWorks</organization>
      </author>
      <author fullname='Mohamed Boucadair' initials='M.' surname='Boucadair'>
         <organization>Orange</organization>
      </author>
      <author fullname='Qin Wu' initials='Q.' surname='Wu'>
         <organization>Huawei</organization>
      </author>
      <date day='10' month='September' year='2024'/>
      <abstract>
	 <t>   This memo provides guidelines for authors and reviewers of
   specifications containing YANG modules, including IANA-maintained
   modules.  Recommendations and procedures are defined, which are
   intended to increase interoperability and usability of Network
   Configuration Protocol (NETCONF) and RESTCONF protocol
   implementations that utilize YANG modules.  This document obsoletes
   RFC 8407.

   Also, this document updates RFC 8126 by providing additional
   guidelines for writing the IANA considerations for RFCs that specify
   IANA-maintained modules.  The document also updates RFC 6020 by
   clarifying how modules and their revisions are handled by IANA.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-netmod-rfc8407bis-15'/>
   
</reference>




    </references>


<section anchor="where-do-packets-get-dropped"><name>Where do packets get dropped?</name>
<t><xref target="ex-drop"/> depicts an example of where and why packets may be discarded in a typical single-ASIC, shared-buffered type device. Packets ingress on the left and egress on the right.</t>

<figure title="Example of where packets get dropped" anchor="ex-drop"><artwork><![CDATA[
                                                      +----------+
                                                      |          |
                                                      |  CPU     |
                                                      |          |
                                                      +--+---^---+
                                                from_cpu |   | to_cpu
                                                         |   |
                          +------------------------------v---+-------------------------------+
                          |                                                                  |

            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+
            |          |  |          |  |          |  |          |  |          |  |          |  |          |
 Packet rx ->  Phy     +-->  Mac     +--> Ingress  +--> Buffers  +--> Egresss  +-->  Mac     +-->  Phy     |>  Packet tx
            |          |  |          |  |  Pipeline|  |          |  |  Pipeline|  |          |  |          |
            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+

  Intended                               policy/acl                  policy/acl
  Discards:                              policy/policer              policy/policer
                                         policy/urpf
                                         policy/null_route

Unintended                 error/rx/l2   error/l3/rx   no_buffer     error/l3/tx
  Discards:                              error/local
                                         error/l3/no_route
                                         error/l3/rx/ttl_expired

]]></artwork></figure>

<section anchor="class_descriptions"><name>Discard Class Descriptions</name>

<dl>
  <dt>discards/policy/:</dt>
  <dd>
    <t>These are intended discards, meaning packets dropped by a device due to a configured policy. There are multiple sub-classes.</t>
  </dd>
  <dt>discards/error/l2/rx/:</dt>
  <dd>
    <t>Frames discarded due to errors in the received L2 frame. There are multiple sub-classes, such as those resulting from failing CRC, invalid header, invalid MAC address, or invalid VLAN.</t>
  </dd>
  <dt>discards/error/l3/rx/:</dt>
  <dd>
    <t>These are discards which occur due to errors in the received packet, indicating an upstream problem rather than an issue with the device dropping the errored packets. There are multiple sub-classes, including header checksum errors, MTU exceeded, and invalid packet, i.e. due to incorrect version, incorrect header length, or invalid options.</t>
  </dd>
  <dt>discards/error/l3/rx/ttl_expired:</dt>
  <dd>
    <t>There can be multiple causes for TTL-expired (or Hop limit exceeded) discards: i) trace-route; ii) TTL (Hop limit) set too low by the end-system; iii) routing loops.</t>
  </dd>
  <dt>discards/error/l3/no_route/:</dt>
  <dd>
    <t>Discards occur due to a packet not matching any route.</t>
  </dd>
  <dt>discards/error/local/:</dt>
  <dd>
    <t>A device may discard packets within its switching pipeline due to internal errors, such as parity errors. Any errored discards not explicitly assigned to the above classes are also accounted for here.</t>
  </dd>
  <dt>discards/no_buffer/:</dt>
  <dd>
    <t>Discards occur due to no available buffer to enqueue the packet. These can be tail-drop discards or due to an active queue management algorithm, such as RED <xref target="RED93"/> or CODEL <xref target="RFC8289"/>.</t>
  </dd>
</dl>

</section>
</section>
<section anchor="experience"><name>Implementation Experience</name>
<t>This appendix captures the authors' experience gained from implementing and applying this information model across multiple vendors' platforms, as guidance for future implementers.</t>

<t><list style="numbers">
  <t>The number and granularity of classes described in Section 3 represent a compromise.  It aims to offer sufficient detail to enable appropriate automated actions while avoiding excessive detail, which may hinder quick problem identification.  Additionally, it helps limit the quantity of data produced per interface, thus constraining the data volume and device CPU impacts.  Although further granularity is possible, the scheme described has generally proven to be sufficient for the task of auto-mitigating unintended packet loss.</t>
  <t>There are many possible ways to define the discard classification tree.  For example, we could have used a multi-rooted tree, rooted in each protocol.  Instead, we opted to define a tree where protocol discards and causal discards are accounted for orthogonally.  This decision reduces the number of combinations of classes and has proven sufficient for determining mitigation actions.</t>
  <t>NoBuffer discards can be realized differently with different memory architectures. Whether a NoBuffer discard is attributed to ingress or egress can differ accordingly.  For successful auto-mitigation, discards due to egress interface congestion should be reported on egress, while discards due to device-level congestion (e.g. due to exceeding the device forwarding rate) should be reported on ingress.</t>
  <t>Platforms often account for the number of packets discarded where the TTL has expired (or Hop Limit exceeded), and the device CPU has returned an ICMP Time Exceeded message.  There is typically a policer applied to limit the number of packets sent to the device CPU, however, which implicitly limits the rate of TTL discards that are processed.  One method to account for all packet discards due to TTL expired, even those that are dropped by a policer when being forwarded to the CPU, is to use accounting of all ingress packets received with TTL=1.</t>
  <t>Where no route discards are implemented with a default null route, separate discard accounting is required for any explicit null routes configured, in order to differentiate between interface/ingress/discards/policy/null_route/packets and interface/ingress/discards/errors/no_route/packets.</t>
  <t>It is useful to account separately for transit packets discarded by ACLs or policers, and packets discarded by ACLs or policers which limit the number of packets to the device control plane.</t>
  <t>It is not possible to identify a configuration error - e.g., when intended discards are unintended - with device packet loss metrics alone.  For example, additional context is needed to determine if ACL discards are intended or due to a misconfigured ACL, i.e., with configuration validation before deployment or by detecting a significant change in ACL discards after a configuration change compared to before.</t>
  <t>Where traffic byte counters need to be 64-bit, packet and discard counters that increase at a lower rate may be encoded in fewer bits, e.g., 32-bit.</t>
  <t>Aggregate counters need to be able to deal with the possibility of discontinuities in the underlying counters.</t>
  <t>In cases where the reporting device is the source or destination of a tunnel, the ingress protocol for a packet may differ from the egress protocol; if IPv4 is tunnelled over IPv6 for example.  Some implementations may attribute egress discards to the ingress protocol.</t>
  <t>While the classification tree is seven layers deep, a minimal implementation may only implement the top six layers.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
OU7stV8uzenZRkc8M5zB6CPTrE/LPb22qULAHkOJDd2Cmb2mxSyztgxAkfc1
zn0Zasp409IT+EFkKEsTYgsMdJSbQ4ZiaJtJHqhxmgH/n5Nm6Gk9x4scyzZj
jZ7WC3NEd8hAEXGIfj6yxwQXnOSLYl0MZYSBS5C9okA8obWkBMIJ8oMYb3FD
XiDC93XTsaR4WKur5FhTRfk0jMJAgWonrtww8AkoTAa0ivIgInmuU+5Bt1B0
GbzA0RBIChw7NJn8Ugk94OkHmhpldjxWzOvaw0daBGEZ900s2OO5FIhGiz8z
EoPhb46ezyzJZGrdz6zJ6HAWTNlafIgg/ErrC3PoBkozcz1qA3HNGA8dZxvi
I1yZKBwIakCPV0EILX5OEc8mPGUFAQFRlMuroQNnZwDzDBjHo7sCGuMsBnCL
C1i7A3ECUR1qG05ukGayFN11oiENHIjuzmPgIEFxQS88CvFmuCrObo5fVaEd
hZI0nSQN9O0gbOB8NxCHYMAhLVTETet26BZh3pXSIiiEvQPy2Wr9Sq2qAqFK
HsVS1crFIZAvrQipuTC/GcXqlYF4SxElhTc9/TO5cFyJxyCfqSxLpVh28ool
e+4GVGUOgZNCZyWj9ahCShuCa/GXRefo2s3ypV4f8Cvr0mYurF0ZTueUT6al
uNha1rymxQplAxAJ5KFfsYDacpIKhefSD/QPJOKeYEvEaB8sMU+KTQHpYtxp
hqL6YiNYx9vD0eX788P+8buLi/7+6P3F4dAZ0uSottA1qLx9Pro0LydEMKu9
L6c4wHW0PHgPbSE60K197QE72hy/2y+1CWNvZRvEsCcau+Z4rbGHkhKoaTsI
mOL0Bc7Jr3CzAXwljyc4TuHyppeyJzRaHI8h1I50y4vTkzO9nLn93XMIGzfF
ydGb/tFReZETIJweXu6/O32rnuOmFk4K6pKyVlMwrC0m5xxrNC8gkFfoWP+5
pHH8JgMbY+s1Sx/w+LptVcJe3wjSwuPg9kE1GQHjEppPNEUlzoFE3RTnLodd
El5O9Odb3Moo/WHQZYf0QF2qgqzYWkZtnq4hF7IZ6ioucOiAAjgdJCkMazxZ
wxSCKYswwLivPKejKXtKZmxP4bBZGF+jUJAanIuT/U/0ngYjgMO7NV+8dpdo
zV6cg/74PBVrWy9Rk37dlsIH2iVQATWuIHpLUnIzg5yE8iYYByGuoSHtPoZh
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

-->

</rfc>

