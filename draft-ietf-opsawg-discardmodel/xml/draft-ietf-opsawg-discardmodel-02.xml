<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.31 (Ruby 2.6.10) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>


<rfc ipr="trust200902" docName="draft-ietf-opsawg-discardmodel-02" category="info" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Info. Model for Pkt Discard Reporting">An Information Model for Packet Discard Reporting</title>

    <author initials="J." surname="Evans" fullname="John Evans">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>1 Principal Place, Worship Street</street>
          <city>London</city>
          <code>EC2A 2FA</code>
          <country>UK</country>
        </postal>
        <email>jevanamz@amazon.co.uk</email>
      </address>
    </author>
    <author initials="O." surname="Pylypenko" fullname="Oleksandr Pylypenko">
      <organization>Amazon</organization>
      <address>
        <postal>
          <street>410 Terry Ave N</street>
          <city>Seattle</city>
          <region>WA</region>
          <code>98109</code>
          <country>US</country>
        </postal>
        <email>opyl@amazon.com</email>
      </address>
    </author>
    <author initials="J." surname="Haas" fullname="Jeffrey Haas">
      <organization>Juniper Networks</organization>
      <address>
        <postal>
          <street>1133 Innovation Way</street>
          <city>Sunnyvale</city>
          <region>CA</region>
          <code>94089</code>
          <country>US</country>
        </postal>
        <email>jhaas@juniper.net</email>
      </address>
    </author>
    <author initials="A." surname="Kadosh" fullname="Aviran Kadosh">
      <organization>Cisco Systems, Inc.</organization>
      <address>
        <postal>
          <street>170 West Tasman Dr.</street>
          <city>San Jose</city>
          <region>CA</region>
          <code>95134</code>
          <country>US</country>
        </postal>
        <email>akadosh@cisco.com</email>
      </address>
    </author>
    <author initials="M." surname="Boucadair" fullname="Mohamed Boucadair">
      <organization>Orange</organization>
      <address>
        <postal>
          <country>France</country>
        </postal>
        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <date year="2024" month="July" day="08"/>

    <area>Operations and Management Area</area>
    <workgroup>OPSAWG</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>The primary function of a network is to transport packets and deliver them according to a service level objective.  Understanding both where and why packet loss occurs within a network is essential for effective network operation.  Device-reported packet loss is the most direct signal for network operations to identify customer impact resulting from unintended packet loss.  This document defines an information model for packet loss reporting, which classifies these signals to enable automated network mitigation of unintended packet loss.</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>In automating network operations, a network operator needs to be able to detect anomalous packet loss, diagnose or root cause the loss, and then apply one of a set of possible actions to mitigate customer-impacting packet loss.  Some packet loss is normal or intended in IP networks, however.  Hence, precise classification of packet loss signals is crucial both to ensure that anomalous packet loss is easily detected and that the right action or sequence of actions are taken to mitigate the impact, as taking the wrong action can make problems worse.</t>

<t>The existing metrics for reporting packet loss, as defined in <xref target="RFC1213"/> - namely ifInDiscards, ifOutDiscards, ifInErrors, ifOutErrors - do not provide sufficient precision to automatically identify the cause of the loss and mitigate the impact.  From a network operator's perspective, ifInDiscards can represent both intended packet loss (e.g., packets discarded due to policy) and unintended packet loss (e.g., packets dropped in error). Furthermore, these definitions are ambiguous, as vendors can and have implemented them differently.  In some implementations, ifInErrors accounts only for errored packets that are dropped, while in others, it accounts for all errored packets, whether they are dropped or not.  Many implementations support more discard metrics than these; where they do, they have been inconsistently implemented due to the lack of a standardised classification scheme and clear semantics for packet loss reporting.  <xref target="RFC7270"/> provides support for reporting discards per flow in IPFIX using forwardingStatus, however, the defined drop reason codes also lack sufficient clarity to support automated root cause analysis and mitigation of impact.</t>

<t>Hence, this document defines an information model for packet loss reporting, aiming to address these issues by presenting a packet loss classification scheme that can enable automated mitigation of unintended packet loss.  Consistent with <xref target="RFC3444"/>, this information model is independent of any specific implementations or protocols used to transport the data.  There are multiple ways that this information model could be implemented (i.e., data models), including SNMP <xref target="RFC1157"/>, NETCONF <xref target="RFC6241"/> / YANG <xref target="RFC7950"/>, and IPFIX <xref target="RFC5153"/>, but they are outside of the scope of this document.  We further limit the scope of this document to reporting packet loss at layer 3 and frames discarded at layer 2, although the information model could be extended in future to cover segments dropped at layer 4.</t>

<t>Section 3 describes the problem. Section 4 describes the information model and requirements with examples.  Section 5 provides examples of discard signal-to-cause-to-auto-mitigation action mapping.  Section 6 presents the information model as an abstract data structure in YANG, in accordance with <xref target="RFC8791"/>.  Appendix A provides an example of where packets may be discarded in a device.  Appendix B details the authors' experience from implementing this model.</t>

<t>This document considers only the signals that may trigger automated mitigation plans and not how they are defined or executed.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

<t>A packet discard is considered to be any packet dropped by a device, which may be intentional (i.e. due to a configured policy, e.g. such as an Access Control List (ACL)) or unintentional (i.e. packets dropped in error).</t>

<t>The meanings of the symbols in the YANG tree diagrams are defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="problem"><name>Problem Statement</name>
<t>At the highest-level, unintended packet loss is the discarding of packets that the network operator otherwise intends to deliver, i.e. which indicates an error state.  There are many possible reasons for unintended packet loss, including: erroring links may corrupt packets in transit; incorrect routing tables may result in packets being dropped because they do not match a valid route; configuration errors may result in a valid packet incorrectly matching an access control list (ACL) and being dropped.  Whilst the specific definition of unintended packet loss is network dependent, for any network there are a small set of potential actions that can be taken to minimise customer impact by auto-mitigating unintended packet loss:</t>

<t><list style="numbers">
  <t>Take a device, link, or set of devices and/or links out of service.</t>
  <t>Return a device, link, or set of devices and/or links back into service.</t>
  <t>Move traffic to other links or devices.</t>
  <t>Roll back a recent change to a device that might have caused the problem.</t>
  <t>Escalate to a human (e.g., network operator) as a last resort.</t>
</list></t>

<t>A precise signal of impact is crucial, as taking the wrong action can be worse than taking no action. For example, taking a congested device out of service can make congestion worse by moving the traffic to other links or devices, which are already congested.</t>

<t>To detect whether device-reported discards indicate a problem and to determine what actions should be taken to mitigate the impact and remediate the cause, depends on four primary features of the packet loss signal:</t>

<t><list style="numbers">
  <t>The cause of the loss.</t>
  <t>The rate and/or degree of the loss.</t>
  <t>The duration of the loss.</t>
  <t>The location of the loss.</t>
</list></t>

<t>Features 2, 3, and 4 are already addressed with passive monitoring statistics, for example, obtained with SNMP <xref target="RFC1157"/> / MIB-II <xref target="RFC1213"/> or NETCONF <xref target="RFC6241"/> / YANG <xref target="RFC7950"/>. Feature 1, however, is dependent on the classification scheme used for packet loss reporting. In the next section, we define a new classification scheme to address this problem.</t>

</section>
<section anchor="model"><name>Information Model</name>

<t>The classification scheme is defined as a tree, which follows the structure component/direction/type/layer/sub-type/sub-sub-type/.../metric, where:<br />
a. component can be interface|device|control_plane|flow<br />
b. direction can be ingress|egress<br />
c. type can be traffic|discards, where traffic accounts for packets successfully received or transmitted, and discards accounts for packet drops<br />
d. layer can be l2|l3</t>

<figure><artwork><![CDATA[
  structure packet-discard-reporting:
    +-- interface* [name]
       +-- name             string
       +-- ingress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- v4
       |  |  |  |  +-- packets?     uint64
       |  |  |  |  +-- bytes?       uint64
       |  |  |  |  +-- unicast
       |  |  |  |  |  +-- packets?   uint64
       |  |  |  |  |  +-- bytes?     uint64
       |  |  |  |  +-- multicast
       |  |  |  |     +-- packets?   uint64
       |  |  |  |     +-- bytes?     uint64
       |  |  |  +-- v6
       |  |  |     +-- packets?     uint64
       |  |  |     +-- bytes?       uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- v4
       |     |  |  +-- packets?     uint64
       |     |  |  +-- bytes?       uint64
       |     |  |  +-- unicast
       |     |  |  |  +-- packets?   uint64
       |     |  |  |  +-- bytes?     uint64
       |     |  |  +-- multicast
       |     |  |     +-- packets?   uint64
       |     |  |     +-- bytes?     uint64
       |     |  +-- v6
       |     |     +-- packets?     uint64
       |     |     +-- bytes?       uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- rx
       |     |  |     +-- frames?          uint48
       |     |  |     +-- crc-error?       uint48
       |     |  |     +-- invalid-mac?     uint48
       |     |  |     +-- invalid-vlan?    uint48
       |     |  |     +-- invalid-frame?   uint48
       |     |  +-- l3
       |     |  |  +-- rx
       |     |  |  |  +-- packets?          uint48
       |     |  |  |  +-- checksum-error?   uint48
       |     |  |  |  +-- mtu-exceeded?     uint48
       |     |  |  |  +-- invalid-packet?   uint48
       |     |  |  |  +-- ttl-expired?      uint48
       |     |  |  +-- no-route?        uint48
       |     |  |  +-- invalid-sid?     uint48
       |     |  |  +-- invalid-label?   uint48
       |     |  +-- hardware
       |     |     +-- packets?        uint48
       |     |     +-- parity-error?   uint48
       |     +-- policy
       |     |  +-- l2
       |     |  |  +-- frames?   uint48
       |     |  |  +-- acl?      uint48
       |     |  +-- l3
       |     |     +-- packets?      uint48
       |     |     +-- acl?          uint48
       |     |     +-- policer
       |     |     |  +-- packets?   uint48
       |     |     |  +-- bytes?     uint48
       |     |     +-- null-route?   uint48
       |     |     +-- rpf?          uint48
       |     |     +-- ddos?         uint48
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- egress
       |  +-- traffic
       |  |  +-- l2
       |  |  |  +-- frames?   uint64
       |  |  |  +-- bytes?    uint64
       |  |  +-- l3
       |  |  |  +-- v4
       |  |  |  |  +-- packets?     uint64
       |  |  |  |  +-- bytes?       uint64
       |  |  |  |  +-- unicast
       |  |  |  |  |  +-- packets?   uint64
       |  |  |  |  |  +-- bytes?     uint64
       |  |  |  |  +-- multicast
       |  |  |  |     +-- packets?   uint64
       |  |  |  |     +-- bytes?     uint64
       |  |  |  +-- v6
       |  |  |     +-- packets?     uint64
       |  |  |     +-- bytes?       uint64
       |  |  |     +-- unicast
       |  |  |     |  +-- packets?   uint64
       |  |  |     |  +-- bytes?     uint64
       |  |  |     +-- multicast
       |  |  |        +-- packets?   uint64
       |  |  |        +-- bytes?     uint64
       |  |  +-- qos
       |  |     +-- class* [id]
       |  |        +-- id         string
       |  |        +-- packets?   uint64
       |  |        +-- bytes?     uint64
       |  +-- discards
       |     +-- l2
       |     |  +-- frames?   uint64
       |     |  +-- bytes?    uint64
       |     +-- l3
       |     |  +-- v4
       |     |  |  +-- packets?     uint64
       |     |  |  +-- bytes?       uint64
       |     |  |  +-- unicast
       |     |  |  |  +-- packets?   uint64
       |     |  |  |  +-- bytes?     uint64
       |     |  |  +-- multicast
       |     |  |     +-- packets?   uint64
       |     |  |     +-- bytes?     uint64
       |     |  +-- v6
       |     |     +-- packets?     uint64
       |     |     +-- bytes?       uint64
       |     |     +-- unicast
       |     |     |  +-- packets?   uint64
       |     |     |  +-- bytes?     uint64
       |     |     +-- multicast
       |     |        +-- packets?   uint64
       |     |        +-- bytes?     uint64
       |     +-- errors
       |     |  +-- l2
       |     |  |  +-- tx
       |     |  |     +-- frames?   uint48
       |     |  +-- l3
       |     |     +-- tx
       |     |        +-- packets?   uint48
       |     +-- policy
       |     |  +-- l3
       |     |     +-- acl?       uint48
       |     |     +-- policer
       |     |        +-- packets?   uint48
       |     |        +-- bytes?     uint48
       |     +-- no-buffer
       |        +-- class* [id]
       |           +-- id         string
       |           +-- packets?   uint64
       |           +-- bytes?     uint64
       +-- control-plane
          +-- ingress
             +-- traffic
             |  +-- packets?   uint48
             |  +-- bytes?     uint48
             +-- discards
                +-- packets?   uint48
                +-- bytes?     uint48
                +-- policy
                   +-- packets?   uint48

]]></artwork></figure>

<t>For additional context, Appendix A provides an example of where packets may be discarded in a device.</t>

<section anchor="requirements"><name>Requirements</name>
<t>Requirements 1-10 relate to packets forwarded by the device; requirement 11 relates to packets destined to or from the device:</t>

<t><list style="numbers">
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>MUST</bcp14> be reported.</t>
  <t>All instances of frame or packet receipt, transmission, and discards <bcp14>SHOULD</bcp14> be attributed to the physical or logical interface of the device where they occur.</t>
  <t>An individual frame <bcp14>MUST</bcp14> only be accounted for by either the L2 traffic class or the L2 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>An individual packet <bcp14>MUST</bcp14> only be accounted for by either the L3 traffic class or the L3 discard classes within a single direction, i.e., ingress or egress.</t>
  <t>A frame accounted for at L2 <bcp14>SHOULD NOT</bcp14> be accounted for at L3 and vice versa.  An implementation <bcp14>MUST</bcp14> expose which layers a discard is counted against.</t>
  <t>The aggregate L2 and L3 traffic and discard classes <bcp14>SHOULD</bcp14> account for all underlying packets received, transmitted, and discarded across all other classes.</t>
  <t>The aggregate Quality of Service (QoS) traffic and no buffer discard classes <bcp14>MUST</bcp14> account for all underlying packets received, transmitted, and discarded across all other classes.</t>
  <t>In addition to the L2 and L3 aggregate classes, an individual discarded packet <bcp14>MUST</bcp14> only account against a single error, policy, or no_buffer discard subclass.</t>
  <t>When there are multiple reasons for discarding a packet, the ordering of discard class reporting <bcp14>MUST</bcp14> be defined.</t>
  <t>If Diffserv <xref target="RFC2475"/> is not used, no_buffer discards <bcp14>SHOULD</bcp14> be reported as class0.</t>
  <t>Traffic to the device control plane has its own class, however, traffic from the device control plane <bcp14>SHOULD</bcp14> be accounted for in the same way as other egress traffic.</t>
</list></t>

</section>
<section anchor="examples"><name>Examples</name>

<t>Assuming all the requirements are met, a "good" unicast IPv4 packet received would increment:<br />
- interface/ingress/traffic/l3/v4/unicast/packets<br />
- interface/ingress/traffic/l3/v4/unicast/bytes<br />
- interface/ingress/traffic/qos/class_0/packets<br />
- interface/ingress/traffic/qos/class_0/bytes</t>

<t>A received unicast IPv6 packet discarded due to Hop Limit expiry would increment:<br />
- interface/ingress/discards/l3/v6/unicast/packets<br />
- interface/ingress/discards/l3/v6/unicast/bytes<br />
- interface/ingress/discards/l3/rx/ttl_expired/packets</t>

<t>An IPv4 packet discarded on egress due to no buffers would increment:<br />
- interface/egress/discards/l3/v4/unicast/packets<br />
- interface/egress/discards/l3/v4/unicast/bytes<br />
- interface/egress/discards/no_buffer/class_0/packets<br />
- interface/egress/discards/no_buffer/class_0/bytes</t>

</section>
</section>
<section anchor="mapping"><name>Example Signal-Cause-Mitigation Mapping</name>
<t><xref target="ex-table"/> gives an example discard signal-to-cause-to-mitigation action mapping.  Mappings for a specific network will be dependent on the definition of unintended packet loss for that network.</t>

<figure title="Example Signal-Cause-Mitigation Mapping" anchor="ex-table"><artwork><![CDATA[
+-------------------------------------------+---------------------+------------+----------+-------------+-----------------------+
| Discard class                             | Cause               | Discard    | Discard  | Unintended? | Possible actions      |
|                                           |                     | rate       | duration |             |                       |
+-------------------------------------------+---------------------+------------+----------+-------------+-----------------------+
| ingress/discards/errors/l2/rx             | Upstream device     | >Baseline  | O(1min)  | Y           | Take upstream link or |
|                                           | or link errror      |            |          |             | device out-of-service |
| ingress/discards/errors/l3/rx/ttl_expired | Tracert             | <=Baseline |          | N           | no action             |
| ingress/discards/errors/l3/rx/ttl_expired | Convergence         | >Baseline  | O(1s)    | Y           | no action             |
| ingress/discards/errors/l3/rx/ttl_expired | Routing loop        | >Baseline  | O(1min)  | Y           | Roll-back change      |
| .*/policy/.*                              | Policy              |            |          | N           | no action             |
| ingress/discards/errors/l3/no_route       | Convergence         | >Baseline  | O(1s)    | Y           | no action             |
| ingress/discards/errors/l3/no_route       | Config error        | >Baseline  | O(1min)  | Y           | Roll-back change      |
| ingress/discards/errors/l3/no_route       | Invalid destination | >Baseline  | O(10min) | N           | Escalate to operator  |
| ingress/discards/errors/local             | Device errors       | >Baseline  | O(1min)  | Y           | Take device           |
|                                           |                     |            |          |             | out-of-service        |
| egress/discards/no_buffer                 | Congestion          | <=Baseline |          | N           | no action             |
| egress/discards/no_buffer                 | Congestion          | >Baseline  | O(1min)  | Y           | Bring capacity back   |
|                                           |                     |            |          |             | into service or move  |
|                                           |                     |            |          |             | traffic               |
+-------------------------------------------+---------------------+------------+----------+-------------+-----------------------+

]]></artwork></figure>

<t>The 'Baseline' in the 'Discard Rate' column is network dependent.</t>

</section>
<section anchor="module"><name>Yang Module</name>

<figure><artwork><![CDATA[
module ietf-packet-discard-reporting {
  yang-version 1.1;
  namespace
    "urn:ietf:params:xml:ns:yang:ietf-packet-discard-reporting";
  prefix plr;

  import ietf-yang-structure-ext {
    prefix sx;
    reference
      "RFC 8791: YANG Data Structure Extensions";
  }

  organization
    "IETF OPSAWG (Operations and Management Area Working Group)";
  contact
    "WG Web:   https://datatracker.ietf.org/wg/opsawg/
     WG List:  mailto:opsawg@ietf.org

     Author:   John Evans
               <mailto:jevanamz@amazon.co.uk>

     Author:   Oleksandr Pylypenko
               <mailto:opyl@amazon.com>

     Author:   Jeffrey Haas
               <mailto:jhaas@juniper.net>

     Author:   Aviran Kadosh
               <mailto:akadosh@cisco.com>

     Author:   Mohamed Boucadair
               <mailto:mohamed.boucadair@orange.com>";
  description
    "This module defines an information model for packet discard
     reporting.

     Copyright (c) 2024 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Revised BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see the
     RFC itself for full legal notices.";

  revision 2024-06-04 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: An Information Model for Packet Discard Reporting";
  }

  typedef uint48 {
    type uint64 {
      range "0..281474976710655";
    }
    description
      "48-bit unsigned integer type";
  }

  typedef uint48-or-64 {
    type union {
      type uint48;
      type uint64;
    }
    description
      "Union type representing either a 48-bit or 64-bit unsigned
       integer. 48-bit counters are used for packet and discard
       counters that increase at a lower rate, while 64-bit counters
       are used for traffic byte counters that may increase more
       rapidly.";
  }

  /*
   * Groupings
   */

  grouping basic-packets-64 {
    description
      "Basic grouping with 64-bit packets";
    leaf packets {
      type uint64;
      description
        "Number of L3 packets";
    }
  }

  grouping basic-packets-bytes-64 {
    description
      "Basic grouping with 64-bit packets and bytes";
    uses basic-packets-64;
    leaf bytes {
      type uint64;
      description
        "Number of L3 bytes";
    }
  }

  grouping basic-frames-64 {
    description
      "Basic grouping with 64-bit frames";
    leaf frames {
      type uint64;
      description
        "Number of L2 frames";
    }
  }

  grouping basic-frames-bytes-64 {
    description
      "Basic grouping with 64-bit packets and bytes";
    uses basic-frames-64;
    leaf bytes {
      type uint64;
      description
        "Number of L2 bytes";
    }
  }

  grouping basic-packets-48 {
    description
      "Basic grouping with 48-bit packets";
    leaf packets {
      type uint48;
      description
        "Number of L3 packets";
    }
  }

  grouping basic-packets-bytes-48 {
    description
      "Basic grouping with 48-bit packets and bytes";
    uses basic-packets-48;
    leaf bytes {
      type uint48;
      description
        "Number of L3 bytes";
    }
  }

  grouping basic-frames-48 {
    description
      "Basic grouping with 48-bit frames";
    leaf frames {
      type uint48;
      description
        "Number of L2 frames";
    }
  }

  grouping basic-frames-bytes-48 {
    description
      "Basic grouping with 48-bit packets and bytes";
    uses basic-frames-48;
    leaf bytes {
      type uint48;
      description
        "Number of L2 bytes";
    }
  }

  grouping l2-traffic {
    description
      "Layer 2 traffic counters";
    uses basic-frames-bytes-64;
  }

  grouping ip {
    description
      "IP traffic counters";
    uses basic-packets-bytes-64;
    container unicast {
      description
        "Unicast traffic counters";
      uses basic-packets-bytes-64;
    }
    container multicast {
      description
        "Multicast traffic counters";
      uses basic-packets-bytes-64;
    }
  }

  grouping l3-traffic {
    description
      "Layer 3 traffic counters";
    container v4 {
      description
        "IPv4 traffic counters";
      uses ip;
    }
    container v6 {
      description
        "IPv6 traffic counters";
      uses ip;
    }
  }

  grouping qos {
    description
      "Quality of Service (QoS) traffic counters";
    list class {
      key "id";
      min-elements 1;
      description
        "QoS class traffic counters";
      leaf id {
        type string;
        description
          "QoS class identifier";
      }
      uses basic-packets-bytes-64;
    }
  }

  grouping traffic {
    description
      "Traffic counters";
    container l2 {
      description
        "Layer 2 traffic counters";
      uses l2-traffic;
    }
    container l3 {
      description
        "Layer 3 traffic counters";
      uses l3-traffic;
    }
    container qos {
      description
        "Quality of Service (QoS) traffic counters";
      uses qos;
    }
  }

  grouping control-plane {
    description
      "Control plane packet counters";
    container ingress {
      description
        "Control plane ingress counters";
      container traffic {
        description
          "Control plane ingress traffic counters";
        uses basic-packets-bytes-48;
      }
      container discards {
        description
          "Control plane ingress packet discard counters";
        uses basic-packets-bytes-48;
        container policy {
          description
            "Number of control plane packets discarded due to policy";
          uses basic-packets-48;
        }
      }
    }
  }

  grouping errors-l2-rx {
    description
      "Layer 2 ingress frame errors";
    container rx {
      description
        "Layer 2 ingress frame error counters";
      leaf frames {
        type uint48;
        description
          "Number of errored L2 frames";
      }
      leaf crc-error {
        type uint48;
        description
          "Number of frames received with CRC error";
      }
      leaf invalid-mac {
        type uint48;
        description
          "Number of frames received with invalid MAC address";
      }
      leaf invalid-vlan {
        type uint48;
        description
          "Number of frames received with invalid VLAN tag";
      }
      leaf invalid-frame {
        type uint48;
        description
          "Number of invalid frames received";
      }
    }
  }

  grouping errors-l3-rx {
    description
      "Layer 3 ingress packet error counters";
    container rx {
      description
        "Layer 3 ingress packet receive error counters";
      leaf packets {
        type uint48;
        description
          "Number of errored L3 packets";
      }
      leaf checksum-error {
        type uint48;
        description
          "Number of packets received with checksum error";
      }
      leaf mtu-exceeded {
        type uint48;
        description
          "Number of packets received exceeding MTU";
      }
      leaf invalid-packet {
        type uint48;
        description
          "Number of invalid packets received";
      }
      leaf ttl-expired {
        type uint48;
        description
          "Number of packets received with expired TTL";
      }
    }
    leaf no-route {
      type uint48;
      description
        "Number of packets with no route";
    }
    leaf invalid-sid {
      type uint48;
      description
        "Number of packets with invalid SID";
    }
    leaf invalid-label {
      type uint48;
      description
        "Number of packets with invalid label";
    }
  }

  grouping errors-l3-hw {
    description
      "Hardware error counters";
    leaf packets {
      type uint48;
      description
        "Number of local errored packets";
    }
    leaf parity-error {
      type uint48;
      description
        "Number of packets with parity error";
    }
  }

  grouping errors-rx {
    description
      "Ingress error counters";
    container l2 {
      description
        "Layer 2 received frame error counters";
      uses errors-l2-rx;
    }
    container l3 {
      description
        "Layer 3 received packet error counters";
      uses errors-l3-rx;
    }
    container hardware {
      description
        "Hardware error counters";
      uses errors-l3-hw;
    }
  }

  grouping errors-l2-tx {
    description
      "Layer 2 transmit error counters";
    container tx {
      description
        "Layer 2 transmit frame error counters";
      leaf frames {
        type uint48;
        description
          "Number of errored L2 frames during transmission";
      }
    }
  }

  grouping errors-l3-tx {
    description
      "Layer 3 transmit error counters";
    container tx {
      description
        "Layer 3 transmit packet error counters";
      leaf packets {
        type uint48;
        description
          "Number of errored L3 packets during transmission";
      }
    }
  }

  grouping errors-tx {
    description
      "Egress error counters";
    container l2 {
      description
        "Layer 2 transmit frame error counters";
      uses errors-l2-tx;
    }
    container l3 {
      description
        "Layer 3 transmit packet error counters";
      uses errors-l3-tx;
    }
  }

  grouping policy-l2-rx {
    description
      "Layer 2 policy ingress packet discard counters";
    leaf frames {
      type uint48;
      description
        "Number of L2 frames discarded due to policy";
    }
    leaf acl {
      type uint48;
      description
        "Number of frames discarded due to L2 ACL";
    }
  }

  grouping policy-l3-rx {
    description
      "Layer 3 policy ingress packet discard counters";
    leaf packets {
      type uint48;
      description
        "Number of L3 packets discarded due to policy";
    }
    leaf acl {
      type uint48;
      description
        "Number of packets discarded due to L3 ACL";
    }
    container policer {
      description
        "Policer ingress packet discard counters";
      uses basic-packets-bytes-48;
    }
    leaf null-route {
      type uint48;
      description
        "Number of packets discarded due to null route";
    }
    leaf rpf {
      type uint48;
      description
        "Number of packets discarded due to RPF check failure";
    }
    leaf ddos {
      type uint48;
      description
        "Number of packets discarded due to DDoS protection";
    }
  }

  grouping policy-rx {
    description
      "Policy-related ingress packet discard counters";
    container l2 {
      description
        "Layer 2 policy ingress packet discard counters";
      uses policy-l2-rx;
    }
    container l3 {
      description
        "Layer 3 policy ingress packet discard counters";
      uses policy-l3-rx;
    }
  }

  grouping policy-l3-tx {
    description
      "Layer 3 policy egress packet discard counters";
    leaf acl {
      type uint48;
      description
        "Number of packets discarded due to L3 egress ACL";
    }
    container policer {
      description
        "Policer egress packet discard counters";
      uses basic-packets-bytes-48;
    }
  }

  grouping policy-tx {
    description
      "Policy-related egress packet discard counters";
    container l3 {
      description
        "Layer 3 policy egress packet discard counters";
      uses policy-l3-tx;
    }
  }

  grouping interface {
    description
      "Interface-level packet loss counters";
    container ingress {
      description
        "Ingress counters";
      container traffic {
        description
          "Ingress traffic counters";
        uses traffic;
      }
      container discards {
        description
          "Ingress packet discard counters";
        container l2 {
          description
            "Layer 2 ingress discards traffic counters";
          uses l2-traffic;
        }
        container l3 {
          description
            "Layer 3 ingress discards traffic counters";
          uses l3-traffic;
        }
        container errors {
          description
            "Ingress packet error counters";
          uses errors-rx;
        }
        container policy {
          description
            "Policy-related ingress packet discard counters";
          uses policy-rx;
        }
        container no-buffer {
          description
            "Ingress packet discard counters due to buffer unavailability";
          uses qos;
        }
      }
    }
    container egress {
      description
        "Egress counters";
      container traffic {
        description
          "Egress traffic counters";
        uses traffic;
      }
      container discards {
        description
          "Egress packet discard counters";
        container l2 {
          description
            "Layer 2 egress packet discard counters";
          uses l2-traffic;
        }
        container l3 {
          description
            "Layer 3 egress packet discard counters";
          uses l3-traffic;
        }
        container errors {
          description
            "Egress packet error counters";
          uses errors-tx;
        }
        container policy {
          description
            "Policy-related egress packet discard counters";
          uses policy-tx;
        }
        container no-buffer {
          description
            "Egress packet discard counters due to buffer unavailability";
          uses qos;
        }
      }
    }
    container control-plane {
      description
        "Control plane packet counters";
      uses control-plane;
    }
  }

  /*
   * Main Structure
   */
  sx:structure packet-discard-reporting {
    description
      "Container for packet discard reporting data.";
    list interface {
      key "name";
      description
        "List of interfaces for which packet discard reporting
         data is provided.";
      leaf name {
        type string;
        description
          "Name of the interface.";
      }
      uses interface;
    }
  }
}

]]></artwork></figure>

</section>
<section anchor="security"><name>Security Considerations</name>

<t>The document defines a YANG modules using <xref target="RFC8791"/>. As such, this document does
not define data nodes. Following  the guidance in Section 3.7 of ietf-netmod-rfc8407bis,
the YANG security template is not used.</t>

</section>
<section anchor="iana"><name>IANA Considerations</name>

<t>IANA is requested to register the following URI in the "ns" subregistry within
   the "IETF XML Registry" <xref target="RFC3688"/>:</t>

<figure><artwork><![CDATA[
   URI:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Registrant Contact:  The IESG.
   XML:  N/A; the requested URI is an XML namespace.
]]></artwork></figure>

<t>IANA is requested to register the following YANG module in the "YANG Module
   Names" subregistry <xref target="RFC6020"/> within the "YANG Parameters" registry:</t>

<figure><artwork><![CDATA[
   Name:  ietf-packet-discard-reporting
   Namespace:  urn:ietf:params:xml:ns:ietf-packet-discard-reporting
   Prefix:  plr
   Maintained by IANA?  N
   Reference:  RFC XXXX
]]></artwork></figure>

</section>
<section anchor="contributors"><name>Contributors</name>

<figure><artwork><![CDATA[
Nadav Chachmon
Cisco Systems, Inc.
170 West Tasman Dr.
San Jose, CA 95134
United States of America
Email: nchachmo@cisco.com
]]></artwork></figure>

</section>
<section anchor="acknowledgements"><name>Acknowledgments</name>
<t>The content of this draft has benefitted from feedback from JR Rivers, Ronan Waide, Chris DeBruin, and Marcoz Sanz.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor='RFC2119'>
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname='S. Bradner' initials='S.' surname='Bradner'/>
    <date month='March' year='1997'/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='2119'/>
  <seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>

<reference anchor='RFC8174'>
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname='B. Leiba' initials='B.' surname='Leiba'/>
    <date month='May' year='2017'/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='14'/>
  <seriesInfo name='RFC' value='8174'/>
  <seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>

<reference anchor='RFC8791'>
  <front>
    <title>YANG Data Structure Extensions</title>
    <author fullname='A. Bierman' initials='A.' surname='Bierman'/>
    <author fullname='M. BjÃ¶rklund' initials='M.' surname='BjÃ¶rklund'/>
    <author fullname='K. Watsen' initials='K.' surname='Watsen'/>
    <date month='June' year='2020'/>
    <abstract>
      <t>This document describes YANG mechanisms for defining abstract data structures with YANG.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8791'/>
  <seriesInfo name='DOI' value='10.17487/RFC8791'/>
</reference>

<reference anchor='RFC3688'>
  <front>
    <title>The IETF XML Registry</title>
    <author fullname='M. Mealling' initials='M.' surname='Mealling'/>
    <date month='January' year='2004'/>
    <abstract>
      <t>This document describes an IANA maintained registry for IETF standards which use Extensible Markup Language (XML) related items such as Namespaces, Document Type Declarations (DTDs), Schemas, and Resource Description Framework (RDF) Schemas.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='81'/>
  <seriesInfo name='RFC' value='3688'/>
  <seriesInfo name='DOI' value='10.17487/RFC3688'/>
</reference>

<reference anchor='RFC6020'>
  <front>
    <title>YANG - A Data Modeling Language for the Network Configuration Protocol (NETCONF)</title>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <date month='October' year='2010'/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration and state data manipulated by the Network Configuration Protocol (NETCONF), NETCONF remote procedure calls, and NETCONF notifications. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6020'/>
  <seriesInfo name='DOI' value='10.17487/RFC6020'/>
</reference>




    </references>

    <references title='Informative References'>



<reference anchor='RFC1213'>
  <front>
    <title>Management Information Base for Network Management of TCP/IP-based internets: MIB-II</title>
    <author fullname='K. McCloghrie' initials='K.' surname='McCloghrie'/>
    <author fullname='M. Rose' initials='M.' surname='Rose'/>
    <date month='March' year='1991'/>
    <abstract>
      <t>This memo defines the second version of the Management Information Base (MIB-II) for use with network management protocols in TCP/IP-based internets. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='STD' value='17'/>
  <seriesInfo name='RFC' value='1213'/>
  <seriesInfo name='DOI' value='10.17487/RFC1213'/>
</reference>

<reference anchor='RFC1157'>
  <front>
    <title>Simple Network Management Protocol (SNMP)</title>
    <author fullname='J.D. Case' initials='J.D.' surname='Case'/>
    <author fullname='M. Fedor' initials='M.' surname='Fedor'/>
    <author fullname='M.L. Schoffstall' initials='M.L.' surname='Schoffstall'/>
    <author fullname='J. Davin' initials='J.' surname='Davin'/>
    <date month='May' year='1990'/>
    <abstract>
      <t>This RFC is a re-release of RFC 1098, with a changed "Status of this Memo" section plus a few minor typographical corrections. This memo defines a simple protocol by which management information for a network element may be inspected or altered by logically remote users. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='1157'/>
  <seriesInfo name='DOI' value='10.17487/RFC1157'/>
</reference>

<reference anchor='RFC3444'>
  <front>
    <title>On the Difference between Information Models and Data Models</title>
    <author fullname='A. Pras' initials='A.' surname='Pras'/>
    <author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'/>
    <date month='January' year='2003'/>
    <abstract>
      <t>There has been ongoing confusion about the differences between Information Models and Data Models for defining managed objects in network management. This document explains the differences between these terms by analyzing how existing network management model specifications (from the IETF and other bodies such as the International Telecommunication Union (ITU) or the Distributed Management Task Force (DMTF)) fit into the universe of Information Models and Data Models. This memo documents the main results of the 8th workshop of the Network Management Research Group (NMRG) of the Internet Research Task Force (IRTF) hosted by the University of Texas at Austin. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='3444'/>
  <seriesInfo name='DOI' value='10.17487/RFC3444'/>
</reference>

<reference anchor='RFC5153'>
  <front>
    <title>IP Flow Information Export (IPFIX) Implementation Guidelines</title>
    <author fullname='E. Boschi' initials='E.' surname='Boschi'/>
    <author fullname='L. Mark' initials='L.' surname='Mark'/>
    <author fullname='J. Quittek' initials='J.' surname='Quittek'/>
    <author fullname='M. Stiemerling' initials='M.' surname='Stiemerling'/>
    <author fullname='P. Aitken' initials='P.' surname='Aitken'/>
    <date month='April' year='2008'/>
    <abstract>
      <t>The IP Flow Information Export (IPFIX) protocol defines how IP Flow information can be exported from routers, measurement probes, or other devices. This document provides guidelines for the implementation and use of the IPFIX protocol. Several sets of guidelines address Template management, transport-specific issues, implementation of Exporting and Collecting Processes, and IPFIX implementation on middleboxes (such as firewalls, network address translators, tunnel endpoints, packet classifiers, etc.). This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='5153'/>
  <seriesInfo name='DOI' value='10.17487/RFC5153'/>
</reference>

<reference anchor='RFC6241'>
  <front>
    <title>Network Configuration Protocol (NETCONF)</title>
    <author fullname='R. Enns' initials='R.' role='editor' surname='Enns'/>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'/>
    <author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'/>
    <date month='June' year='2011'/>
    <abstract>
      <t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices. It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages. The NETCONF protocol operations are realized as remote procedure calls (RPCs). This document obsoletes RFC 4741. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='6241'/>
  <seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>

<reference anchor='RFC7950'>
  <front>
    <title>The YANG 1.1 Data Modeling Language</title>
    <author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'/>
    <date month='August' year='2016'/>
    <abstract>
      <t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols. This document describes the syntax and semantics of version 1.1 of the YANG language. YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification. There are a small number of backward incompatibilities from YANG version 1. This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7950'/>
  <seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>


<reference anchor="RED93" >
  <front>
    <title>Random Early Detection gateways for Congestion Avoidance</title>
    <author initials="V." surname="Jacobson">
      <organization></organization>
    </author>
    <date year="n.d."/>
  </front>
</reference>


<reference anchor='RFC2475'>
  <front>
    <title>An Architecture for Differentiated Services</title>
    <author fullname='S. Blake' initials='S.' surname='Blake'/>
    <author fullname='D. Black' initials='D.' surname='Black'/>
    <author fullname='M. Carlson' initials='M.' surname='Carlson'/>
    <author fullname='E. Davies' initials='E.' surname='Davies'/>
    <author fullname='Z. Wang' initials='Z.' surname='Wang'/>
    <author fullname='W. Weiss' initials='W.' surname='Weiss'/>
    <date month='December' year='1998'/>
    <abstract>
      <t>This document defines an architecture for implementing scalable service differentiation in the Internet. This memo provides information for the Internet community.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='2475'/>
  <seriesInfo name='DOI' value='10.17487/RFC2475'/>
</reference>

<reference anchor='RFC8289'>
  <front>
    <title>Controlled Delay Active Queue Management</title>
    <author fullname='K. Nichols' initials='K.' surname='Nichols'/>
    <author fullname='V. Jacobson' initials='V.' surname='Jacobson'/>
    <author fullname='A. McGregor' initials='A.' role='editor' surname='McGregor'/>
    <author fullname='J. Iyengar' initials='J.' role='editor' surname='Iyengar'/>
    <date month='January' year='2018'/>
    <abstract>
      <t>This document describes CoDel (Controlled Delay) -- a general framework that controls bufferbloat-generated excess delay in modern networking environments. CoDel consists of an estimator, a setpoint, and a control loop. It requires no configuration in normal Internet deployments.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='8289'/>
  <seriesInfo name='DOI' value='10.17487/RFC8289'/>
</reference>

<reference anchor='RFC7270'>
  <front>
    <title>Cisco-Specific Information Elements Reused in IP Flow Information Export (IPFIX)</title>
    <author fullname='A. Yourtchenko' initials='A.' surname='Yourtchenko'/>
    <author fullname='P. Aitken' initials='P.' surname='Aitken'/>
    <author fullname='B. Claise' initials='B.' surname='Claise'/>
    <date month='June' year='2014'/>
    <abstract>
      <t>This document describes some additional IP Flow Information Export (IPFIX) Information Elements in the range of 1-127, which is the range compatible with field types used by NetFlow version 9 in RFC 3954, as specified in the IPFIX Information Model in RFC 7012.</t>
    </abstract>
  </front>
  <seriesInfo name='RFC' value='7270'/>
  <seriesInfo name='DOI' value='10.17487/RFC7270'/>
</reference>

<reference anchor='RFC8340'>
  <front>
    <title>YANG Tree Diagrams</title>
    <author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'/>
    <author fullname='L. Berger' initials='L.' role='editor' surname='Berger'/>
    <date month='March' year='2018'/>
    <abstract>
      <t>This document captures the current syntax used in YANG module tree diagrams. The purpose of this document is to provide a single location for this definition. This syntax may be updated from time to time based on the evolution of the YANG language.</t>
    </abstract>
  </front>
  <seriesInfo name='BCP' value='215'/>
  <seriesInfo name='RFC' value='8340'/>
  <seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>




    </references>


<section anchor="where-do-packets-get-dropped"><name>Where do packets get dropped?</name>
<t><xref target="ex-drop"/> depicts an example of where and why packets may be discarded in a typical single ASIC, shared buffered type device, where packets ingress on the left and egress on the right.</t>

<figure title="Example of where packets get dropped" anchor="ex-drop"><artwork><![CDATA[
                                                      +----------+
                                                      |          |
                                                      |  CPU     |
                                                      |          |
                                                      +--+---^---+
                                                from_cpu |   | to_cpu
                                                         |   |
                          +------------------------------v---+-------------------------------+
                          |                                                                  |

            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+
            |          |  |          |  |          |  |          |  |          |  |          |  |          |
 Packet rx ->  Phy     +-->  Mac     +--> Ingress  +--> Buffers  +--> Egresss  +-->  Mac     +-->  Phy     |>  Packet tx
            |          |  |          |  |  Pipeline|  |          |  |  Pipeline|  |          |  |          |
            +----------+  +----------+  +----------+  +----------+  +----------+  +----------+  +----------+

  Intended                               policy/acl                  policy/acl
  Discards:                              policy/policer              policy/policer
                                         policy/urpf
                                         policy/null_route

Unintended                 error/rx/l2   error/l3/rx   no_buffer     error/l3/tx
  Discards:                              error/local
                                         error/l3/no_route
                                         error/l3/rx/ttl_expired

]]></artwork></figure>

<section anchor="class_descriptions"><name>Discard Class Descriptions</name>

<dl>
  <dt>discards/policy/:</dt>
  <dd>
    <t>These are intended discards, meaning packets dropped by a device due to a configured policy. There are multiple sub-classes.</t>
  </dd>
  <dt>discards/error/l2/rx/:</dt>
  <dd>
    <t>Frames discarded due to errors in the received L2 frame. There are multiple sub-classes, such as those resulting from failing CRC, invalid header, invalid MAC address, or invalid VLAN.</t>
  </dd>
  <dt>discards/error/l3/rx/:</dt>
  <dd>
    <t>These are discards which occur due to errors in the received packet, indicating an upstream problem rather than an issue with the device dropping the errored packets. There are multiple sub-classes, including header checksum errors, MTU exceeded, and invalid packet, i.e. due to incorrect version, incorrect header length, or invalid options.</t>
  </dd>
  <dt>discards/error/l3/rx/ttl_expired:</dt>
  <dd>
    <t>There can be multiple causes for TTL-expired (or Hop limit exceeded) discards: i) trace-route; ii) TTL (Hop limit) set too low by the end-system; iii) routing loops.</t>
  </dd>
  <dt>discards/error/l3/no_route/:</dt>
  <dd>
    <t>Discards occur due to a packet not matching any route.</t>
  </dd>
  <dt>discards/error/local/:</dt>
  <dd>
    <t>A device may discard packets within its switching pipeline due to internal errors, such as parity errors. Any errored discards not explicitly assigned to the above classes are also accounted for here.</t>
  </dd>
  <dt>discards/no_buffer/:</dt>
  <dd>
    <t>Discards occur due to no available buffer to enqueue the packet. These can be tail-drop discards or due to an active queue management algorithm, such as RED <xref target="RED93"/> or CODEL <xref target="RFC8289"/>.</t>
  </dd>
</dl>

</section>
</section>
<section anchor="experience"><name>Implementation Experience</name>
<t>This appendix captures the authors' experience gained from implementing and applying this information model across multiple vendors' platforms, as guidance for future implementers.</t>

<t><list style="numbers">
  <t>The number and granularity of classes described in Section 3 represent a compromise.  It aims to offer sufficient detail to enable appropriate automated actions while avoiding excessive detail, which may hinder quick problem identification.  Additionally, it helps constrain the quantity of data produced per interface to constrain data volume and device CPU impacts.  Although further granularity is possible, the scheme described has generally proven to be sufficient for the task of auto-mitigating unintended packet loss.</t>
  <t>There are multiple possible ways to define the discard classification tree.  For example, we could have used a multi-rooted tree, rooted in each protocol.  Instead, we opted to define a tree where protocol discards and causal discards are accounted for orthogonally.  This decision reduces the number of combinations of classes and has proven sufficient for determining mitigation actions.</t>
  <t>NoBuffer discards can be realized differently with different memory architectures. Whether a NoBuffer discard is attributed to ingress or egress can differ accordingly.  For successful auto-mitigation, discards due to egress interface congestion should be reported on egress, while discards due to device-level congestion (e.g. due to exceeding the device forwarding rate) should be reported on ingress.</t>
  <t>Platforms often account for the number of packets discarded where the TTL has expired (or Hop Limit exceeded), and the device CPU has returned an ICMP Time Exceeded message.  There is typically a policer applied to limit the number of packets sent to the device CPU, however, which implicitly limits the rate of TTL discards that are processed.  One method to account for all packet discards due to TTL expired, even those that are dropped by a policer when being forwarded to the CPU, is to use accounting of all ingress packets received with TTL=1.</t>
  <t>Where no route discards are implemented with a default null route, separate discard accounting is required for any explicit null routes configured, in order to differentiate between interface/ingress/discards/policy/null_route/packets and interface/ingress/discards/errors/no_route/packets.</t>
  <t>It is useful to account separately for transit packets discarded by transit ACLs or policers, and packets discarded by ACLs or policers which limit the number of packets to the device control plane.</t>
  <t>It is not possible to identify a configuration error - e.g., when intended discards are unintended - with device packet loss metrics alone.  For example, to determine if ACL drops are intended or due to a misconfigured ACL some other method is needed, i.e., with configuration validation before deployment or by detecting a significant change in ACL drops after a configuration change compared to before.</t>
  <t>Where traffic byte counters need to be 64-bit, packet and discard counters that increase at a lower rate may be encoded in fewer bits, e.g., 48-bit.</t>
  <t>Aggregate counters need to be able to deal with the possibility of discontinuities in the underlying counters.</t>
  <t>In cases where the reporting device is the source or destination of a tunnel, the ingress protocol for a packet may differ from the egress protocol; if IPv4 is tunneled over IPv6 for example.  Some implementations may attribute egress discards to the ingress protocol.</t>
  <t>While the classification tree is seven layers deep, a minimal implementation may only implement the top six layers.</t>
</list></t>

</section>


  </back>

<!-- ##markdown-source:
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
aKsAAA==

-->

</rfc>

